(X86Program
  (Info1
    (locals_types
      (($tmp.1 Integer)
       ($tmp.2 Integer)
       ($tmp.3 Integer)
       ($tmp.4 Integer)
       ($tmp.5 Integer)
       ($tmp.6 Integer)
       ($tmp.7 Integer)
       ($tmp.8 Integer)
       (i.1 Integer)
       (j.1 Integer)
       (m.1 Integer)
       (n.1 Integer)
       (sum.1 Integer))))
  (((Label block_1)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1)
            (VarL j.1)
            (VarL m.1)
            (VarL n.1)
            (VarL sum.1)
            (RegL Rsp)))
         (afters
           (((VarL $tmp.3)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (RegL Rsp))
            ((VarL $tmp.3)
             (VarL $tmp.4)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (RegL Rsp))
            ((VarL $tmp.3)
             (VarL $tmp.4)
             (VarL $tmp.5)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (RegL Rsp))
            ((VarL $tmp.3)
             (VarL $tmp.5)
             (VarL $tmp.6)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (RegL Rsp))
            ((VarL $tmp.3)
             (VarL $tmp.6)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (RegL Rsp))
            ((VarL $tmp.6)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL $tmp.7)
             (VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ()))))
      ((Movq (Var sum.1) (Var $tmp.3))
       (Movq (Var i.1) (Var $tmp.4))
       (Movq (Var j.1) (Var $tmp.5))
       (Movq (Var $tmp.4) (Var $tmp.6))
       (Addq (Var $tmp.5) (Var $tmp.6))
       (Movq (Var $tmp.3) (Var sum.1))
       (Addq (Var $tmp.6) (Var sum.1))
       (Movq (Var j.1) (Var $tmp.7))
       (Movq (Var $tmp.7) (Var j.1))
       (Addq (Imm 1) (Var j.1))
       (Jmp (Label loop_2)))))
   ((Label block_2)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1)
            (VarL m.1)
            (VarL n.1)
            (VarL sum.1)
            (RegL Rsp)))
         (afters
           (((VarL $tmp.8)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ()))))
      ((Movq (Var i.1) (Var $tmp.8))
       (Movq (Var $tmp.8) (Var i.1))
       (Addq (Imm 1) (Var i.1))
       (Jmp (Label loop_1)))))
   ((Label block_3)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1)
            (VarL m.1)
            (VarL n.1)
            (VarL sum.1)
            (RegL Rsp)))
         (afters
           (((VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ()))))
      ((Movq (Imm 1) (Var j.1))
       (Jmp (Label loop_2)))))
   ((Label block_4)
    (Block
      (Binfo2
        ((initial ((VarL sum.1) (RegL Rsp)))
         (afters (((RegL Rsp) (RegL Rax)) ()))))
      ((Movq (Var sum.1) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label loop_1)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1)
            (VarL m.1)
            (VarL n.1)
            (VarL sum.1)
            (RegL Rsp)))
         (afters
           (((VarL $tmp.1)
             (VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp)
             (RegL Rflags))
            ((VarL sum.1) (RegL Rsp))
            ()))))
      ((Movq (Var i.1) (Var $tmp.1))
       (Cmpq (Var m.1) (Var $tmp.1))
       (JmpIf CC_le (Label block_3))
       (Jmp (Label block_4)))))
   ((Label loop_2)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1)
            (VarL j.1)
            (VarL m.1)
            (VarL n.1)
            (VarL sum.1)
            (RegL Rsp)))
         (afters
           (((VarL $tmp.2)
             (VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL j.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp)
             (RegL Rflags))
            ((VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ()))))
      ((Movq (Var j.1) (Var $tmp.2))
       (Cmpq (Var n.1) (Var $tmp.2))
       (JmpIf CC_le (Label block_1))
       (Jmp (Label block_2)))))
   ((Label start)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((VarL sum.1) (RegL Rsp))
            ((VarL sum.1) (RegL Rsp) (RegL Rax))
            ((VarL m.1) (VarL sum.1) (RegL Rsp))
            ((VarL m.1)
             (VarL sum.1)
             (RegL Rsp)
             (RegL Rax))
            ((VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL m.1)
             (VarL n.1)
             (VarL sum.1)
             (RegL Rsp))
            ()))))
      ((Movq (Imm 0) (Var sum.1))
       (Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var m.1))
       (Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var n.1))
       (Movq (Imm 1) (Var i.1))
       (Jmp (Label loop_1)))))))
