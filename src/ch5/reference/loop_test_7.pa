start:
    movq $30, %r13
    movq $20, %r12
    movq %r13, %rbx
    callq read_int
    movq %rax, %rcx
    movq %rbx, %r13
    subq %rcx, %r13
    movq $0, %rbx
    callq read_int
    movq %rax, %rcx
    addq %rcx, %r12
    movq $0, %rcx
    movq %rbx, %rdx
    addq %rcx, %rdx
    movq %r13, %rcx
    movq %r12, %rsi
    addq %rsi, %rcx
    movq %rdx, %rax
    addq %rcx, %rax
    jmp conclusion

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    subq $8, %rsp
    jmp start

conclusion:
    addq $8, %rsp
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
