(X86Program
  (Info1
    (locals_types
      (($tmp.1 Integer)
       ($tmp.2 Integer)
       ($tmp.3 Integer)
       ($tmp.4 Integer)
       ($tmp.5 Integer)
       (i.1 Integer)
       (sum.1 Integer))))
  (((Label block_1)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1) (VarL sum.1) (RegL Rsp)))
         (afters
           (((VarL $tmp.2) (VarL i.1) (RegL Rsp))
            ((VarL $tmp.2)
             (VarL $tmp.3)
             (VarL i.1)
             (RegL Rsp))
            ((VarL $tmp.3)
             (VarL i.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1) (VarL sum.1) (RegL Rsp))
            ((VarL $tmp.4) (VarL sum.1) (RegL Rsp))
            ((VarL i.1) (VarL sum.1) (RegL Rsp))
            ((VarL i.1) (VarL sum.1) (RegL Rsp))
            ()))))
      ((Movq (Var sum.1) (Var $tmp.2))
       (Movq (Var i.1) (Var $tmp.3))
       (Movq (Var $tmp.2) (Var sum.1))
       (Addq (Var $tmp.3) (Var sum.1))
       (Movq (Var i.1) (Var $tmp.4))
       (Movq (Var $tmp.4) (Var i.1))
       (Subq (Imm 1) (Var i.1))
       (Jmp (Label loop_1)))))
   ((Label block_2)
    (Block
      (Binfo2
        ((initial ((VarL sum.1) (RegL Rsp)))
         (afters
           (((VarL $tmp.5) (RegL Rsp))
            ((VarL $tmp.5) (RegL Rsp) (RegL Rax))
            ((RegL Rsp) (RegL Rax))
            ()))))
      ((Movq (Var sum.1) (Var $tmp.5))
       (Movq (Imm 27) (Reg Rax))
       (Addq (Var $tmp.5) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label loop_1)
    (Block
      (Binfo2
        ((initial
           ((VarL i.1) (VarL sum.1) (RegL Rsp)))
         (afters
           (((VarL $tmp.1)
             (VarL i.1)
             (VarL sum.1)
             (RegL Rsp))
            ((VarL i.1)
             (VarL sum.1)
             (RegL Rsp)
             (RegL Rflags))
            ((VarL sum.1) (RegL Rsp))
            ()))))
      ((Movq (Var i.1) (Var $tmp.1))
       (Cmpq (Imm 0) (Var $tmp.1))
       (JmpIf CC_g (Label block_1))
       (Jmp (Label block_2)))))
   ((Label start)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((VarL sum.1) (RegL Rsp))
            ((VarL i.1) (VarL sum.1) (RegL Rsp))
            ()))))
      ((Movq (Imm 0) (Var sum.1))
       (Movq (Imm 5) (Var i.1))
       (Jmp (Label loop_1)))))))
