block_1:
    addq $1, -48(%rbp)
    jmp loop_2

block_2:
    movq $1, -32(%rbp)
    jmp block_1

block_3:
    jmp block_1

block_4:
    movq -48(%rbp), %rax
    cmpq %rax, -40(%rbp)
    je block_2
    jmp block_3

block_5:
    addq $1, -40(%rbp)
    jmp loop_1

block_6:
    addq -16(%rbp), %rbx
    addq -24(%rbp), %rbx
    movq -32(%rbp), %rax
    movq %rax, -16(%rbp)
    addq -16(%rbp), %rbx
    movq %rbx, %rax
    addq $40, %rax
    jmp conclusion

loop_1:
    cmpq $2, -40(%rbp)
    jl loop_2
    jmp block_6

loop_2:
    cmpq $2, -48(%rbp)
    jl block_4
    jmp block_5

start:
    movq $1, %rbx
    movq $0, -16(%rbp)
    movq $0, -24(%rbp)
    movq $0, -32(%rbp)
    movq $1, -40(%rbp)
    movq $1, -48(%rbp)
    jmp loop_1

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    subq $40, %rsp
    jmp start

conclusion:
    addq $40, %rsp
    popq %rbx
    popq %rbp
    retq
