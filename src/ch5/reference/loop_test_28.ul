(X86Program
  (Info1
    (locals_types
      (($tmp.1 Integer)
       ($tmp.2 Integer)
       ($tmp.3 Integer)
       ($tmp.4 Integer)
       (x.1 Integer)
       (y.1 Integer))))
  (((Label start)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((VarL x.1) (RegL Rsp))
            ((VarL x.1) (RegL Rsp))
            ((VarL x.1) (RegL Rsp) (RegL Rax))
            ((VarL x.1) (VarL y.1) (RegL Rsp))
            ((VarL $tmp.1) (VarL y.1) (RegL Rsp))
            ((VarL $tmp.1)
             (VarL y.1)
             (RegL Rsp)
             (RegL Rax))
            ((VarL $tmp.1)
             (VarL x.1)
             (VarL y.1)
             (RegL Rsp))
            ((VarL $tmp.1)
             (VarL $tmp.2)
             (VarL x.1)
             (RegL Rsp))
            ((VarL $tmp.2)
             (VarL $tmp.3)
             (VarL x.1)
             (RegL Rsp))
            ((VarL $tmp.3) (VarL x.1) (RegL Rsp))
            ((VarL $tmp.3) (VarL $tmp.4) (RegL Rsp))
            ((VarL $tmp.4) (RegL Rsp) (RegL Rax))
            ((RegL Rsp) (RegL Rax))
            ()))))
      ((Movq (Imm 10) (Var x.1))
       (Movq (Imm 0) (Var y.1))
       (Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var y.1))
       (Movq (Var x.1) (Var $tmp.1))
       (Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var x.1))
       (Movq (Var y.1) (Var $tmp.2))
       (Movq (Var $tmp.1) (Var $tmp.3))
       (Addq (Var $tmp.2) (Var $tmp.3))
       (Movq (Var x.1) (Var $tmp.4))
       (Movq (Var $tmp.3) (Reg Rax))
       (Addq (Var $tmp.4) (Reg Rax))
       (Jmp (Label conclusion)))))))
