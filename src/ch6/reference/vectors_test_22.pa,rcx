block_1:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq $42, 8(%r11)
    movq $0, -16(%rbp)
    movq -8(%r15), %r11
    movq %rcx, 8(%r11)
    movq $0, -8(%rbp)
    movq $0, %rcx
    movq -8(%r15), %r11
    movq 8(%r11), %rax
    movq %rax, -8(%r15)
    movq -8(%r15), %r11
    movq 8(%r11), %rax
    movq %rax, -8(%r15)
    movq %rcx, %rax
    addq -8(%r15), %rax
    jmp conclusion

block_2:
    movq $0, %rcx
    jmp block_1

block_3:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block_1

block_4:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $131, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq -8(%r15), %rax
    movq %rax, 8(%r11)
    movq $0, -8(%r15)
    movq %rcx, -8(%r15)
    movq free_ptr(%rip), %rcx
    addq $16, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%rbp)
    cmpq -8(%rbp), %rcx
    jl block_2
    jmp block_3

block_5:
    movq $0, %rcx
    jmp block_4

block_6:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block_4

block_7:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq $44, 8(%r11)
    movq $0, -8(%rbp)
    movq %rcx, -8(%r15)
    movq free_ptr(%rip), %rcx
    addq $16, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%rbp)
    cmpq -8(%rbp), %rcx
    jl block_5
    jmp block_6

block_8:
    movq $0, %rcx
    jmp block_7

block_9:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block_7

start:
    movq free_ptr(%rip), %rcx
    addq $16, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%r15)
    cmpq -8(%r15), %rcx
    jl block_8
    jmp block_9

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    subq $16, %rsp
    movq $65536, %rdi
    movq $65536, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    movq $0, 0(%r15)
    addq $8, %r15
    jmp start

conclusion:
    subq $8, %r15
    addq $16, %rsp
    popq %rbp
    retq
