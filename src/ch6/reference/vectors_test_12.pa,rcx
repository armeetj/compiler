block_1:
    movq free_ptr(%rip), %r11
    addq $136, free_ptr(%rip)
    movq $8388513, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 8(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 16(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 24(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 32(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 40(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 48(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 56(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 64(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 72(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 80(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 88(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 96(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 104(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 112(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 120(%r11)
    movq $0, -24(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 128(%r11)
    movq $0, -16(%rbp)
    movq %rcx, %r11
    movq 40(%r11), %rcx
    movq %rcx, %r11
    movq 32(%r11), %rcx
    movq %rcx, %r11
    movq 24(%r11), %rcx
    movq %rcx, %r11
    movq 16(%r11), %rcx
    movq %rcx, %r11
    movq 8(%r11), %rax
    jmp conclusion

block_10:
    movq free_ptr(%rip), %r11
    addq $24, free_ptr(%rip)
    movq $389, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 8(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 16(%r11)
    movq $0, -16(%rbp)
    movq %rcx, -16(%rbp)
    movq free_ptr(%rip), %rcx
    addq $40, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%rbp)
    cmpq -8(%rbp), %rcx
    jl block_8
    jmp block_9

block_11:
    movq $0, %rcx
    jmp block_10

block_12:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp block_10

block_13:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq $42, 8(%r11)
    movq $0, -16(%rbp)
    movq %rcx, -16(%rbp)
    movq free_ptr(%rip), %rcx
    addq $24, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%rbp)
    cmpq -8(%rbp), %rcx
    jl block_11
    jmp block_12

block_14:
    movq $0, %rcx
    jmp block_13

block_15:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block_13

block_2:
    movq $0, %rcx
    jmp block_1

block_3:
    movq %r15, %rdi
    movq $136, %rsi
    callq collect
    jmp block_1

block_4:
    movq free_ptr(%rip), %r11
    addq $72, free_ptr(%rip)
    movq $32657, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 8(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 16(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 24(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 32(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 40(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 48(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 56(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 64(%r11)
    movq $0, -16(%rbp)
    movq %rcx, -16(%rbp)
    movq free_ptr(%rip), %rcx
    addq $136, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%rbp)
    cmpq -8(%rbp), %rcx
    jl block_2
    jmp block_3

block_5:
    movq $0, %rcx
    jmp block_4

block_6:
    movq %r15, %rdi
    movq $72, %rsi
    callq collect
    jmp block_4

block_7:
    movq free_ptr(%rip), %r11
    addq $40, free_ptr(%rip)
    movq $1929, 0(%r11)
    movq %r11, %rcx
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 8(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 16(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 24(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %r11
    movq -16(%rbp), %rax
    movq %rax, 32(%r11)
    movq $0, -16(%rbp)
    movq %rcx, -16(%rbp)
    movq free_ptr(%rip), %rcx
    addq $72, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -8(%rbp)
    cmpq -8(%rbp), %rcx
    jl block_5
    jmp block_6

block_8:
    movq $0, %rcx
    jmp block_7

block_9:
    movq %r15, %rdi
    movq $40, %rsi
    callq collect
    jmp block_7

start:
    movq free_ptr(%rip), %rcx
    addq $16, %rcx
    movq fromspace_end(%rip), %rax
    movq %rax, -16(%rbp)
    cmpq -16(%rbp), %rcx
    jl block_14
    jmp block_15

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    subq $32, %rsp
    movq $65536, %rdi
    movq $65536, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start

conclusion:
    subq $0, %r15
    addq $32, %rsp
    popq %rbp
    retq
