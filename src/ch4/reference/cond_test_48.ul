(X86Program
  (Info1
    (locals_types
      (($tmp.1 Integer)
       (x.1 Integer)
       (y.1 Integer))))
  (((Label block_1)
    (Block
      (Binfo2
        ((initial ((VarL $tmp.1) (RegL Rsp)))
         (afters
           (((VarL $tmp.1) (RegL Rsp) (RegL Rax))
            ((RegL Rsp) (RegL Rax))
            ()))))
      ((Movq (Imm 1) (Reg Rax))
       (Addq (Var $tmp.1) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label block_2)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters (((VarL $tmp.1) (RegL Rsp)) ()))))
      ((Movq (Imm 41) (Var $tmp.1))
       (Jmp (Label block_1)))))
   ((Label block_3)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((VarL y.1) (RegL Rsp))
            ((VarL $tmp.1) (RegL Rsp))
            ((VarL $tmp.1) (RegL Rsp))
            ()))))
      ((Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var y.1))
       (Movq (Var y.1) (Var $tmp.1))
       (Addq (Imm 7) (Var $tmp.1))
       (Jmp (Label block_1)))))
   ((Label start)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((VarL x.1) (RegL Rsp))
            ((RegL Rsp) (RegL Rflags))
            ((RegL Rsp))
            ()))))
      ((Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var x.1))
       (Cmpq (Var x.1) (Imm 0))
       (JmpIf CC_l (Label block_2))
       (Jmp (Label block_3)))))))
