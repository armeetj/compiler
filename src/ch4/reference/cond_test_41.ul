(X86Program
  (Info1
    (locals_types
      ((x.1 Integer) (y.1 Integer))))
  (((Label block_1)
    (Block
      (Binfo2
        ((initial ((VarL y.1) (RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((RegL Rsp) (RegL Rax))
            ()))))
      ((Movq (Var y.1) (Reg Rax))
       (Addq (Imm 2) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label block_2)
    (Block
      (Binfo2
        ((initial ((VarL y.1) (RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((RegL Rsp) (RegL Rax))
            ()))))
      ((Movq (Var y.1) (Reg Rax))
       (Addq (Imm 10) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label block_3)
    (Block
      (Binfo2
        ((initial
           ((VarL x.1) (VarL y.1) (RegL Rsp)))
         (afters
           (((VarL y.1) (RegL Rsp) (RegL Rflags))
            ((VarL y.1) (RegL Rsp))
            ()))))
      ((Cmpq (Imm 0) (Var x.1))
       (JmpIf CC_e (Label block_1))
       (Jmp (Label block_2)))))
   ((Label block_4)
    (Block
      (Binfo2
        ((initial
           ((VarL x.1) (VarL y.1) (RegL Rsp)))
         (afters
           (((VarL y.1) (RegL Rsp) (RegL Rflags))
            ((VarL y.1) (RegL Rsp))
            ()))))
      ((Cmpq (Imm 2) (Var x.1))
       (JmpIf CC_e (Label block_1))
       (Jmp (Label block_2)))))
   ((Label start)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((VarL x.1) (RegL Rsp))
            ((VarL x.1) (RegL Rsp) (RegL Rax))
            ((VarL x.1) (VarL y.1) (RegL Rsp))
            ((VarL x.1)
             (VarL y.1)
             (RegL Rsp)
             (RegL Rflags))
            ((VarL x.1) (VarL y.1) (RegL Rsp))
            ()))))
      ((Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var x.1))
       (Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var y.1))
       (Cmpq (Imm 1) (Var x.1))
       (JmpIf CC_l (Label block_3))
       (Jmp (Label block_4)))))))
