(X86Program
  (Info1
    (locals_types
      (($tmp.1 Integer)
       ($tmp.2 Integer)
       ($tmp.3 Integer)
       ($tmp.4 Integer))))
  (((Label block_1)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters (((RegL Rsp) (RegL Rax)) ()))))
      ((Movq (Imm 42) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label block_2)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters (((RegL Rsp) (RegL Rax)) ()))))
      ((Movq (Imm 77) (Reg Rax))
       (Jmp (Label conclusion)))))
   ((Label block_3)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((VarL $tmp.4) (RegL Rsp))
            ((RegL Rsp) (RegL Rflags))
            ((RegL Rsp))
            ()))))
      ((Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var $tmp.4))
       (Cmpq (Imm 0) (Var $tmp.4))
       (JmpIf CC_l (Label block_1))
       (Jmp (Label block_2)))))
   ((Label start)
    (Block
      (Binfo2
        ((initial ((RegL Rsp)))
         (afters
           (((RegL Rsp) (RegL Rax))
            ((VarL $tmp.1) (RegL Rsp))
            ((VarL $tmp.1) (VarL $tmp.2) (RegL Rsp))
            ((VarL $tmp.2) (RegL Rsp))
            ((VarL $tmp.2) (RegL Rsp) (RegL Rax))
            ((VarL $tmp.2) (VarL $tmp.3) (RegL Rsp))
            ((RegL Rsp) (RegL Rflags))
            ((RegL Rsp))
            ()))))
      ((Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var $tmp.1))
       (Movq (Imm 1) (Var $tmp.2))
       (Addq (Var $tmp.1) (Var $tmp.2))
       (Callq (Label read_int) 0)
       (Movq (Reg Rax) (Var $tmp.3))
       (Cmpq (Var $tmp.3) (Var $tmp.2))
       (JmpIf CC_g (Label block_3))
       (Jmp (Label block_2)))))))
