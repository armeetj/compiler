(X86Program
  ((Label block_1)
   (Movq (Imm 42) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label block_2)
   (Movq (Imm 0) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label main_start)
   (Leaq
     (GlobalArg Rip (Label even))
     (Reg Rbx))
   (Movq (Imm 2) (Reg Rdi))
   (IndirectCallq (Reg Rbx))
   (Movq (Reg Rax) (Reg Rcx))
   (Cmpq (Imm 1) (Reg Rcx))
   (JmpIf CC_e (Label block_1))
   (Jmp (Label block_2))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 8) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label block_3)
   (Movq (Imm 1) (Reg Rax))
   (Jmp (Label even_conclusion))
   (Label block_4)
   (Leaq
     (GlobalArg Rip (Label odd))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Imm 1) (Reg Rbx))
   (Negq (Reg Rbx))
   (Addq (Reg Rbx) (Reg Rcx))
   (Movq (Reg Rcx) (Reg Rdi))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label even_start)
   (Movq (Reg Rdi) (Reg Rcx))
   (Cmpq (Imm 0) (Reg Rcx))
   (JmpIf CC_e (Label block_3))
   (Jmp (Label block_4))
   (Global (Label even))
   (Align 8)
   (Label even)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 8) (Reg Rsp))
   (Jmp (Label even_start))
   (Label even_conclusion)
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label block_5)
   (Movq (Imm 0) (Reg Rax))
   (Jmp (Label odd_conclusion))
   (Label block_6)
   (Leaq
     (GlobalArg Rip (Label even))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Imm 1) (Reg Rbx))
   (Negq (Reg Rbx))
   (Addq (Reg Rbx) (Reg Rcx))
   (Movq (Reg Rcx) (Reg Rdi))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label odd_start)
   (Movq (Reg Rdi) (Reg Rcx))
   (Cmpq (Imm 0) (Reg Rcx))
   (JmpIf CC_e (Label block_5))
   (Jmp (Label block_6))
   (Global (Label odd))
   (Align 8)
   (Label odd)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 8) (Reg Rsp))
   (Jmp (Label odd_start))
   (Label odd_conclusion)
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq))
