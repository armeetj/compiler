(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Apply
          (FunRef (Label foo) 6)
          ((Int 100)
           (Int 2)
           (Int 3)
           (Int 4)
           (Int 5)
           (Let
             _.5
             (If
               (Prim
                 Lt
                 ((Prim
                    Add
                    ((GlobalVal free_ptr) (Int 40)))
                  (GlobalVal fromspace_end)))
               Void
               (Collect 40))
             (Let
               $ea.1
               (Allocate
                 4
                 (Vector
                   (Integer Integer Integer Integer)))
               (Let
                 _.4
                 (VecSet (Var $ea.1) 0 (Int 6))
                 (Let
                   _.3
                   (VecSet (Var $ea.1) 1 (Int 7))
                   (Let
                     _.2
                     (VecSet (Var $ea.1) 2 (Int 8))
                     (Let
                       _.1
                       (VecSet (Var $ea.1) 3 (Int 142))
                       (Var $ea.1))))))))))))
   (Def
     (Label foo)
     ((args
        ((x1.1 Integer)
         (x2.1 Integer)
         (x3.1 Integer)
         (x4.1 Integer)
         (x5.1 Integer)
         ($tup.1
           (Vector
             (Integer Integer Integer Integer)))))
      (ret Integer)
      (body
        (If
          (Prim Eq ((Int 0) (Var x1.1)))
          (VecRef (Var $tup.1) 3)
          (Apply
            (FunRef (Label foo) 6)
            ((Prim
               Add
               ((Var x1.1) (Prim Negate ((Int 1)))))
             (Var x2.1)
             (Var x3.1)
             (Var x4.1)
             (Var x5.1)
             (Let
               $ea.2
               (VecRef (Var $tup.1) 0)
               (Let
                 $ea.3
                 (VecRef (Var $tup.1) 1)
                 (Let
                   $ea.4
                   (VecRef (Var $tup.1) 2)
                   (Let
                     $ea.5
                     (Prim
                       Add
                       ((VecRef (Var $tup.1) 3)
                        (Prim Negate ((Int 1)))))
                     (Let
                       _.10
                       (If
                         (Prim
                           Lt
                           ((Prim
                              Add
                              ((GlobalVal free_ptr) (Int 40)))
                            (GlobalVal fromspace_end)))
                         Void
                         (Collect 40))
                       (Let
                         $ea.6
                         (Allocate
                           4
                           (Vector
                             (Integer Integer Integer Integer)))
                         (Let
                           _.9
                           (VecSet (Var $ea.6) 0 (Var $ea.2))
                           (Let
                             _.8
                             (VecSet (Var $ea.6) 1 (Var $ea.3))
                             (Let
                               _.7
                               (VecSet (Var $ea.6) 2 (Var $ea.4))
                               (Let
                                 _.6
                                 (VecSet (Var $ea.6) 3 (Var $ea.5))
                                 (Var $ea.6)))))))))))))))))))
