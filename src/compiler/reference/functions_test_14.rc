(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $ea.1
          (Let
            $tmp.1
            (FunRef (Label zero) 1)
            (Apply (Var $tmp.1) ((Int 20))))
          (Let
            $ea.2
            (Let
              $tmp.2
              (FunRef (Label one) 1)
              (Apply (Var $tmp.2) ((Int 20))))
            (Let
              $ea.3
              (Let
                $tmp.3
                (FunRef (Label two) 1)
                (Apply (Var $tmp.3) ((Int 20))))
              (Let
                $ea.4
                (Let
                  $tmp.4
                  (FunRef (Label three) 1)
                  (Apply (Var $tmp.4) ((Int 20))))
                (Let
                  _.6
                  (If
                    (Let
                      $tmp.5
                      (GlobalVal free_ptr)
                      (Let
                        $tmp.6
                        (Prim Add ((Var $tmp.5) (Int 48)))
                        (Let
                          $tmp.7
                          (GlobalVal fromspace_end)
                          (Prim Lt ((Var $tmp.6) (Var $tmp.7))))))
                    (Atm Void)
                    (Collect 48))
                  (Let
                    $ea.5
                    (Allocate
                      5
                      (Vector
                        ((Vector ())
                         Integer
                         (Vector ((Vector ()) Integer))
                         (Vector
                           ((Vector ())
                            Integer
                            (Vector ((Vector ()) Integer))))
                         (Vector
                           ((Vector ())
                            Integer
                            (Vector ((Vector ()) Integer))
                            (Vector
                              ((Vector ())
                               Integer
                               (Vector ((Vector ()) Integer)))))))))
                    (Let
                      _.5
                      (VecSet (Var $ea.5) 0 (Var $ea.1))
                      (Let
                        _.4
                        (VecSet (Var $ea.5) 1 (Int 42))
                        (Let
                          _.3
                          (VecSet (Var $ea.5) 2 (Var $ea.2))
                          (Let
                            _.2
                            (VecSet (Var $ea.5) 3 (Var $ea.3))
                            (Let
                              _.1
                              (VecSet (Var $ea.5) 4 (Var $ea.4))
                              (Let
                                $tmp.8
                                (VecRef (Var $ea.5) 4)
                                (Let
                                  $tmp.9
                                  (VecRef (Var $tmp.8) 3)
                                  (Let
                                    $tmp.10
                                    (VecRef (Var $tmp.9) 2)
                                    (VecRef (Var $tmp.10) 1))))))))))))))))))
   (Def
     (Label minus)
     ((args ((n.1 Integer) (m.1 Integer)))
      (ret Integer)
      (body
        (Let
          $tmp.11
          (Prim Negate ((Var m.1)))
          (Prim Add ((Var n.1) (Var $tmp.11)))))))
   (Def
     (Label zero)
     ((args ((x.1 Integer)))
      (ret (Vector ()))
      (body
        (If
          (Prim Eq ((Var x.1) (Int 0)))
          (Let
            _.7
            (If
              (Let
                $tmp.12
                (GlobalVal free_ptr)
                (Let
                  $tmp.13
                  (Prim Add ((Var $tmp.12) (Int 8)))
                  (Let
                    $tmp.14
                    (GlobalVal fromspace_end)
                    (Prim Lt ((Var $tmp.13) (Var $tmp.14))))))
              (Atm Void)
              (Collect 8))
            (Let
              $ea.6
              (Allocate 0 (Vector ()))
              (Atm (Var $ea.6))))
          (Let
            $tmp.21
            (FunRef (Label zero) 1)
            (Let
              $tmp.19
              (FunRef (Label minus) 2)
              (Let
                _.9
                (If
                  (Let
                    $tmp.15
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.16
                      (Prim Add ((Var $tmp.15) (Int 16)))
                      (Let
                        $tmp.17
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.16) (Var $tmp.17))))))
                  (Atm Void)
                  (Collect 16))
                (Let
                  $ea.7
                  (Allocate 1 (Vector (Integer)))
                  (Let
                    _.8
                    (VecSet (Var $ea.7) 0 (Var x.1))
                    (Let
                      $tmp.18
                      (VecRef (Var $ea.7) 0)
                      (Let
                        $tmp.20
                        (Apply
                          (Var $tmp.19)
                          ((Var $tmp.18) (Int 1)))
                        (Apply (Var $tmp.21) ((Var $tmp.20))))))))))))))
   (Def
     (Label one)
     ((args ((x.2 Integer)))
      (ret (Vector ((Vector ()) Integer)))
      (body
        (If
          (Prim Eq ((Var x.2) (Int 0)))
          (Let
            $ea.8
            (Let
              $tmp.22
              (FunRef (Label zero) 1)
              (Apply (Var $tmp.22) ((Int 20))))
            (Let
              _.12
              (If
                (Let
                  $tmp.23
                  (GlobalVal free_ptr)
                  (Let
                    $tmp.24
                    (Prim Add ((Var $tmp.23) (Int 24)))
                    (Let
                      $tmp.25
                      (GlobalVal fromspace_end)
                      (Prim Lt ((Var $tmp.24) (Var $tmp.25))))))
                (Atm Void)
                (Collect 24))
              (Let
                $ea.9
                (Allocate
                  2
                  (Vector ((Vector ()) Integer)))
                (Let
                  _.11
                  (VecSet (Var $ea.9) 0 (Var $ea.8))
                  (Let
                    _.10
                    (VecSet (Var $ea.9) 1 (Int 42))
                    (Atm (Var $ea.9)))))))
          (Let
            $tmp.32
            (FunRef (Label one) 1)
            (Let
              $tmp.30
              (FunRef (Label minus) 2)
              (Let
                _.14
                (If
                  (Let
                    $tmp.26
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.27
                      (Prim Add ((Var $tmp.26) (Int 16)))
                      (Let
                        $tmp.28
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.27) (Var $tmp.28))))))
                  (Atm Void)
                  (Collect 16))
                (Let
                  $ea.10
                  (Allocate 1 (Vector (Integer)))
                  (Let
                    _.13
                    (VecSet (Var $ea.10) 0 (Var x.2))
                    (Let
                      $tmp.29
                      (VecRef (Var $ea.10) 0)
                      (Let
                        $tmp.31
                        (Apply
                          (Var $tmp.30)
                          ((Var $tmp.29) (Int 1)))
                        (Apply (Var $tmp.32) ((Var $tmp.31))))))))))))))
   (Def
     (Label two)
     ((args ((x.3 Integer)))
      (ret
        (Vector
          ((Vector ())
           Integer
           (Vector ((Vector ()) Integer)))))
      (body
        (If
          (Prim Eq ((Var x.3) (Int 0)))
          (Let
            $ea.11
            (Let
              $tmp.33
              (FunRef (Label zero) 1)
              (Apply (Var $tmp.33) ((Int 20))))
            (Let
              $ea.12
              (Let
                $tmp.34
                (FunRef (Label one) 1)
                (Apply (Var $tmp.34) ((Int 20))))
              (Let
                _.18
                (If
                  (Let
                    $tmp.35
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.36
                      (Prim Add ((Var $tmp.35) (Int 32)))
                      (Let
                        $tmp.37
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.36) (Var $tmp.37))))))
                  (Atm Void)
                  (Collect 32))
                (Let
                  $ea.13
                  (Allocate
                    3
                    (Vector
                      ((Vector ())
                       Integer
                       (Vector ((Vector ()) Integer)))))
                  (Let
                    _.17
                    (VecSet (Var $ea.13) 0 (Var $ea.11))
                    (Let
                      _.16
                      (VecSet (Var $ea.13) 1 (Int 42))
                      (Let
                        _.15
                        (VecSet (Var $ea.13) 2 (Var $ea.12))
                        (Atm (Var $ea.13)))))))))
          (Let
            $tmp.44
            (FunRef (Label two) 1)
            (Let
              $tmp.42
              (FunRef (Label minus) 2)
              (Let
                _.20
                (If
                  (Let
                    $tmp.38
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.39
                      (Prim Add ((Var $tmp.38) (Int 16)))
                      (Let
                        $tmp.40
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.39) (Var $tmp.40))))))
                  (Atm Void)
                  (Collect 16))
                (Let
                  $ea.14
                  (Allocate 1 (Vector (Integer)))
                  (Let
                    _.19
                    (VecSet (Var $ea.14) 0 (Var x.3))
                    (Let
                      $tmp.41
                      (VecRef (Var $ea.14) 0)
                      (Let
                        $tmp.43
                        (Apply
                          (Var $tmp.42)
                          ((Var $tmp.41) (Int 1)))
                        (Apply (Var $tmp.44) ((Var $tmp.43))))))))))))))
   (Def
     (Label three)
     ((args ((x.4 Integer)))
      (ret
        (Vector
          ((Vector ())
           Integer
           (Vector ((Vector ()) Integer))
           (Vector
             ((Vector ())
              Integer
              (Vector ((Vector ()) Integer)))))))
      (body
        (If
          (Prim Eq ((Var x.4) (Int 0)))
          (Let
            $ea.15
            (Let
              $tmp.45
              (FunRef (Label zero) 1)
              (Apply (Var $tmp.45) ((Int 20))))
            (Let
              $ea.16
              (Let
                $tmp.46
                (FunRef (Label one) 1)
                (Apply (Var $tmp.46) ((Int 20))))
              (Let
                $ea.17
                (Let
                  $tmp.47
                  (FunRef (Label two) 1)
                  (Apply (Var $tmp.47) ((Int 20))))
                (Let
                  _.25
                  (If
                    (Let
                      $tmp.48
                      (GlobalVal free_ptr)
                      (Let
                        $tmp.49
                        (Prim Add ((Var $tmp.48) (Int 40)))
                        (Let
                          $tmp.50
                          (GlobalVal fromspace_end)
                          (Prim Lt ((Var $tmp.49) (Var $tmp.50))))))
                    (Atm Void)
                    (Collect 40))
                  (Let
                    $ea.18
                    (Allocate
                      4
                      (Vector
                        ((Vector ())
                         Integer
                         (Vector ((Vector ()) Integer))
                         (Vector
                           ((Vector ())
                            Integer
                            (Vector ((Vector ()) Integer)))))))
                    (Let
                      _.24
                      (VecSet (Var $ea.18) 0 (Var $ea.15))
                      (Let
                        _.23
                        (VecSet (Var $ea.18) 1 (Int 42))
                        (Let
                          _.22
                          (VecSet (Var $ea.18) 2 (Var $ea.16))
                          (Let
                            _.21
                            (VecSet (Var $ea.18) 3 (Var $ea.17))
                            (Atm (Var $ea.18)))))))))))
          (Let
            $tmp.57
            (FunRef (Label three) 1)
            (Let
              $tmp.55
              (FunRef (Label minus) 2)
              (Let
                _.27
                (If
                  (Let
                    $tmp.51
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.52
                      (Prim Add ((Var $tmp.51) (Int 16)))
                      (Let
                        $tmp.53
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.52) (Var $tmp.53))))))
                  (Atm Void)
                  (Collect 16))
                (Let
                  $ea.19
                  (Allocate 1 (Vector (Integer)))
                  (Let
                    _.26
                    (VecSet (Var $ea.19) 0 (Var x.4))
                    (Let
                      $tmp.54
                      (VecRef (Var $ea.19) 0)
                      (Let
                        $tmp.56
                        (Apply
                          (Var $tmp.55)
                          ((Var $tmp.54) (Int 1)))
                        (Apply (Var $tmp.57) ((Var $tmp.56))))))))))))))))
