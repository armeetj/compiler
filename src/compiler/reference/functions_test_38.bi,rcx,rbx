(X86Program
  ((Def
     (Label main)
     (Finfo2
       (conflicts
         (((VarL $tmp.1) ((RegL Rsp) (RegL Rdi)))
          ((VarL $tmp.2)
           ((VarL $tmp.3)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL tr.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tmp.3)
           ((VarL $tmp.2)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL tr.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tmp.4)
           ((VarL $tmp.2) (VarL $tmp.3) (RegL Rsp)))
          ((VarL $tmp.5)
           ((VarL $tmp.2)
            (VarL $tmp.3)
            (VarL $tmp.6)
            (RegL Rsp)))
          ((VarL $tmp.6)
           ((VarL $tmp.2)
            (VarL $tmp.5)
            (RegL Rsp)
            (RegL Rax)))
          ((VarL tr.1)
           ((VarL $tmp.2) (VarL $tmp.3) (RegL Rsp)))
          ((VarL triple) ((RegL Rsp)))
          ((RegL Rsp)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL tr.1)
            (VarL triple)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rax)
           ((VarL $tmp.6)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx) ((RegL Rsp) (RegL Rax)))
          ((RegL Rdx) ((RegL Rsp) (RegL Rax)))
          ((RegL Rsi) ((RegL Rsp) (RegL Rax)))
          ((RegL Rdi)
           ((VarL $tmp.1) (RegL Rsp) (RegL Rax)))
          ((RegL R8) ((RegL Rsp) (RegL Rax)))
          ((RegL R9) ((RegL Rsp) (RegL Rax)))
          ((RegL R10) ((RegL Rsp) (RegL Rax)))
          ((RegL R11)
           ((VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rsp)
            (RegL Rax))))))
     ((nparams 0)
      (locals
        (($tmp.1
           (Function
             (Integer)
             (Vector (Integer Integer Integer))))
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4 Integer)
         ($tmp.5 Integer)
         ($tmp.6 Integer)
         (tr.1
           (Vector (Integer Integer Integer)))
         (triple
           (Function
             (Integer)
             (Vector (Integer Integer Integer))))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label triple))
               (Var $tmp.1))
             (Movq (Imm 13) (Reg Rdi))
             (IndirectCallq (Var $tmp.1) 1)
             (Movq (Reg Rax) (Var tr.1))
             (Movq (Var tr.1) (Reg R11))
             (Movq (Deref R11 8) (Var $tmp.2))
             (Movq (Var tr.1) (Reg R11))
             (Movq (Deref R11 16) (Var $tmp.3))
             (Movq (Var tr.1) (Reg R11))
             (Movq (Deref R11 24) (Var $tmp.4))
             (Movq (Var $tmp.4) (Var $tmp.5))
             (Addq (Imm 3) (Var $tmp.5))
             (Movq (Var $tmp.3) (Var $tmp.6))
             (Addq (Var $tmp.5) (Var $tmp.6))
             (Movq (Var $tmp.2) (Reg Rax))
             (Addq (Var $tmp.6) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label triple)
     (Finfo2
       (conflicts
         (((VarL $ea.1)
           ((VarL _.1)
            (VarL _.2)
            (VarL _.3)
            (VarL x.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tmp.7)
           ((VarL x.1) (RegL Rsp) (RegL R15)))
          ((VarL $tmp.8)
           ((VarL $tmp.9)
            (VarL x.1)
            (RegL Rsp)
            (RegL R15)))
          ((VarL $tmp.9)
           ((VarL $tmp.8)
            (VarL x.1)
            (RegL Rsp)
            (RegL R15)))
          ((VarL _.1) ((VarL $ea.1) (RegL Rsp)))
          ((VarL _.2)
           ((VarL $ea.1) (VarL x.1) (RegL Rsp)))
          ((VarL _.3)
           ((VarL $ea.1) (VarL x.1) (RegL Rsp)))
          ((VarL _.4) ((VarL x.1) (RegL Rsp)))
          ((VarL x.1)
           ((VarL $ea.1)
            (VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL _.2)
            (VarL _.3)
            (VarL _.4)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL R15)
            (RegL Rflags)))
          ((RegL Rsp)
           ((VarL $ea.1)
            (VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL _.1)
            (VarL _.2)
            (VarL _.3)
            (VarL _.4)
            (VarL x.1)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rax) ((VarL x.1) (RegL Rsp)))
          ((RegL Rcx) ((VarL x.1) (RegL Rsp)))
          ((RegL Rdx) ((VarL x.1) (RegL Rsp)))
          ((RegL Rsi)
           ((VarL x.1) (RegL Rsp) (RegL Rdi)))
          ((RegL Rdi)
           ((VarL x.1) (RegL Rsp) (RegL Rsi)))
          ((RegL R8) ((VarL x.1) (RegL Rsp)))
          ((RegL R9) ((VarL x.1) (RegL Rsp)))
          ((RegL R10) ((VarL x.1) (RegL Rsp)))
          ((RegL R11)
           ((VarL $ea.1) (VarL x.1) (RegL Rsp)))
          ((RegL R15)
           ((VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL x.1)
            (RegL Rflags)))
          ((RegL Rflags)
           ((VarL x.1) (RegL Rsp) (RegL R15))))))
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($ea.1
           (Vector (Integer Integer Integer)))
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 Integer)
         (_.1 Unit)
         (_.2 Unit)
         (_.3 Unit)
         (_.4 Unit)
         (x.1 Integer)))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 32)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 7) (Deref R11 0))
             (Movq (Reg R11) (Var $ea.1))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Var x.1) (Deref R11 8))
             (Movq (Imm 0) (Var _.3))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Var x.1) (Deref R11 16))
             (Movq (Imm 0) (Var _.2))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Var x.1) (Deref R11 24))
             (Movq (Imm 0) (Var _.1))
             (Movq (Var $ea.1) (Reg Rax))
             (Jmp (Label triple_conclusion)))))
         ((Label block_2)
          (Block
            Binfo1
            ((Movq (Imm 0) (Var _.4))
             (Jmp (Label block_1)))))
         ((Label block_3)
          (Block
            Binfo1
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 32) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_1)))))
         ((Label triple_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.1))
             (Movq
               (GlobalArg (Label free_ptr))
               (Var $tmp.7))
             (Movq (Var $tmp.7) (Var $tmp.8))
             (Addq (Imm 32) (Var $tmp.8))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Var $tmp.9))
             (Cmpq (Var $tmp.9) (Var $tmp.8))
             (JmpIf CC_l (Label block_2))
             (Jmp (Label block_3)))))))))))
