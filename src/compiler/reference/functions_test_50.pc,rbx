(X86Program
  ((Label main_start)
   (Leaq
     (GlobalArg Rip (Label twice))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Leaq
     (GlobalArg Rip (Label add1))
     (Reg Rbx))
   (Callq (Label read_int))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Reg Rbx) (Reg Rdi))
   (Movq (Deref Rbp -16) (Reg Rsi))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label add1_start)
   (Movq (Reg Rdi) (Reg Rbx))
   (Movq (Imm 1) (Reg Rax))
   (Addq (Reg Rbx) (Reg Rax))
   (Jmp (Label add1_conclusion))
   (Global (Label add1))
   (Align 8)
   (Label add1)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 8) (Reg Rsp))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label add1_start))
   (Label add1_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label twice_start)
   (Movq (Reg Rdi) (Deref Rbp -16))
   (Movq (Reg Rsi) (Deref Rbp -24))
   (Movq (Deref Rbp -24) (Reg Rdi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Reg Rbx))
   (Movq (Deref Rbp -24) (Reg Rdi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Reg Rbx) (Reg Rax))
   (Addq (Deref Rbp -16) (Reg Rax))
   (Jmp (Label twice_conclusion))
   (Global (Label twice))
   (Align 8)
   (Label twice)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label twice_start))
   (Label twice_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq))
