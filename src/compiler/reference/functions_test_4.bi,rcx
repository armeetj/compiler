(X86Program
  ((Def
     (Label main)
     (Finfo2
       (conflicts
         (((VarL $tmp.1) ((RegL Rsp) (RegL Rdi)))
          ((VarL $tmp.2) ((RegL Rsp)))
          ((VarL sum) ((RegL Rsp)))
          ((RegL Rsp)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL sum)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rax)
           ((RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx) ((RegL Rsp) (RegL Rax)))
          ((RegL Rdx) ((RegL Rsp) (RegL Rax)))
          ((RegL Rsi) ((RegL Rsp) (RegL Rax)))
          ((RegL Rdi)
           ((VarL $tmp.1) (RegL Rsp) (RegL Rax)))
          ((RegL R8) ((RegL Rsp) (RegL Rax)))
          ((RegL R9) ((RegL Rsp) (RegL Rax)))
          ((RegL R10) ((RegL Rsp) (RegL Rax)))
          ((RegL R11) ((RegL Rsp) (RegL Rax)))
          ((RegL Rflags) ((RegL Rsp))))))
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         (sum (Function (Integer) Integer))))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq (Imm 42) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label block_2)
          (Block
            Binfo1
            ((Movq (Imm 777) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label sum))
               (Var $tmp.1))
             (Movq (Imm 3) (Reg Rdi))
             (IndirectCallq (Var $tmp.1) 1)
             (Movq (Reg Rax) (Var $tmp.2))
             (Cmpq (Imm 6) (Var $tmp.2))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))
   (Def
     (Label sum)
     (Finfo2
       (conflicts
         (((VarL $tmp.3)
           ((VarL $tmp.4)
            (VarL $tmp.5)
            (VarL x.1)
            (RegL Rsp)))
          ((VarL $tmp.4)
           ((VarL $tmp.3)
            (VarL $tmp.5)
            (VarL x.1)
            (RegL Rsp)))
          ((VarL $tmp.5)
           ((VarL $tmp.3)
            (VarL $tmp.4)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rdi)))
          ((VarL $tmp.6)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((VarL sum) ((RegL Rsp)))
          ((VarL x.1)
           ((VarL $tmp.3)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rsp)
           ((VarL $tmp.3)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL sum)
            (VarL x.1)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rax)
           ((VarL $tmp.6)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL Rdx)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL Rsi)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL Rdi)
           ((VarL $tmp.5)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R8)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL R9)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL R10)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL R11)
           ((VarL x.1) (RegL Rsp) (RegL Rax)))
          ((RegL Rflags) ((VarL x.1) (RegL Rsp))))))
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($tmp.3 Integer)
         ($tmp.4 Integer)
         ($tmp.5 (Function (Integer) Integer))
         ($tmp.6 Integer)
         (sum (Function (Integer) Integer))
         (x.1 Integer)))
      (body
        (((Label block_3)
          (Block
            Binfo1
            ((Movq (Imm 1) (Reg Rax))
             (Jmp (Label sum_conclusion)))))
         ((Label block_4)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label sum))
               (Var $tmp.5))
             (Movq (Imm 1) (Var $tmp.3))
             (Negq (Var $tmp.3))
             (Movq (Var x.1) (Var $tmp.4))
             (Addq (Var $tmp.3) (Var $tmp.4))
             (Movq (Var $tmp.4) (Reg Rdi))
             (IndirectCallq (Var $tmp.5) 1)
             (Movq (Reg Rax) (Var $tmp.6))
             (Movq (Var x.1) (Reg Rax))
             (Addq (Var $tmp.6) (Reg Rax))
             (Jmp (Label sum_conclusion)))))
         ((Label sum_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.1))
             (Cmpq (Imm 1) (Var x.1))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))))
