(X86Program
  ((Def
     (Label main)
     (Finfo
       (num_spilled 2)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 0)
      (locals
        (($tmp.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3
           (Function (Integer Integer) Integer))
         ($tmp.4 Integer)
         (ack
           (Function (Integer Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            ((Leaq (GlobalArg (Label ack)) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -16))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Deref Rbp -8))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Deref Rbp -8) (Reg Rdi))
             (Movq (Reg Rcx) (Reg Rsi))
             (IndirectCallq (Deref Rbp -16) 2)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Reg Rcx) (Reg Rax))
             (Addq (Imm 41) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label ack)
     (Finfo
       (num_spilled 4)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 2)
      (locals
        ((m.1 Integer)
         (n.1 Integer)
         ($tmp.10 Integer)
         ($tmp.11
           (Function (Integer Integer) Integer))
         ($tmp.5 Integer)
         ($tmp.6
           (Function (Integer Integer) Integer))
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9
           (Function (Integer Integer) Integer))
         (ack
           (Function (Integer Integer) Integer))
         (m.1 Integer)
         (n.1 Integer)))
      (body
        (((Label ack_start)
          (Block
            ((Movq (Reg Rdi) (Deref Rbp -32))
             (Movq (Reg Rsi) (Reg Rcx))
             (Cmpq (Imm 0) (Deref Rbp -32))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))
         ((Label block_1)
          (Block
            ((Leaq (GlobalArg (Label ack)) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Deref Rbp -32) (Reg Rcx))
             (Subq (Imm 1) (Reg Rcx))
             (Movq (Reg Rcx) (Reg Rdi))
             (Movq (Imm 1) (Reg Rsi))
             (Movq (Deref Rbp -8) (Reg Rax))
             (TailJmp (Reg Rax) 2))))
         ((Label block_2)
          (Block
            ((Leaq (GlobalArg (Label ack)) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Deref Rbp -32) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -16))
             (Subq (Imm 1) (Deref Rbp -16))
             (Leaq (GlobalArg (Label ack)) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -24))
             (Subq (Imm 1) (Reg Rcx))
             (Movq (Deref Rbp -32) (Reg Rdi))
             (Movq (Reg Rcx) (Reg Rsi))
             (IndirectCallq (Deref Rbp -24) 2)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Deref Rbp -16) (Reg Rdi))
             (Movq (Reg Rcx) (Reg Rsi))
             (Movq (Deref Rbp -8) (Reg Rax))
             (TailJmp (Reg Rax) 2))))
         ((Label block_3)
          (Block
            ((Movq (Imm 1) (Reg Rax))
             (Addq (Reg Rcx) (Reg Rax))
             (Jmp (Label ack_conclusion)))))
         ((Label block_4)
          (Block
            ((Cmpq (Imm 0) (Reg Rcx))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))))
