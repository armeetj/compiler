(X86Program
  ((Label main_start)
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Imm 0) (Reg Rdi))
   (IndirectCallq (Deref Rbp -8))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Imm 1) (Reg Rdi))
   (IndirectCallq (Deref Rbp -8))
   (Movq (Reg Rax) (Deref Rbp -32))
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Imm 2) (Reg Rdi))
   (IndirectCallq (Deref Rbp -8))
   (Movq (Reg Rax) (Deref Rbp -40))
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Imm 3) (Reg Rdi))
   (IndirectCallq (Deref Rbp -8))
   (Movq (Reg Rax) (Deref Rbp -48))
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Imm 4) (Reg Rdi))
   (IndirectCallq (Deref Rbp -8))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Imm 5) (Reg Rdi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Reg Rcx))
   (Addq (Reg Rcx) (Deref Rbp -8))
   (Movq (Deref Rbp -48) (Reg Rcx))
   (Addq (Deref Rbp -8) (Reg Rcx))
   (Movq (Deref Rbp -40) (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Addq (Reg Rcx) (Deref Rbp -8))
   (Movq (Deref Rbp -32) (Reg Rcx))
   (Addq (Deref Rbp -8) (Reg Rcx))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 48) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 48) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq
   (Label block_1)
   (Movq (Imm 0) (Reg Rax))
   (Jmp (Label mult_conclusion))
   (Label block_2)
   (Leaq
     (GlobalArg Rip (Label mult))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Imm 1) (Deref Rbp -8))
   (Negq (Deref Rbp -8))
   (Addq (Reg Rcx) (Deref Rbp -8))
   (Movq (Deref Rbp -8) (Reg Rdi))
   (Movq (Deref Rbp -24) (Reg Rsi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label mult_conclusion))
   (Label mult_start)
   (Movq (Reg Rdi) (Reg Rcx))
   (Movq (Reg Rsi) (Deref Rbp -24))
   (Movq (Imm 0) (Reg Rax))
   (Cmpq (Reg Rcx) (Reg Rax))
   (JmpIf CC_e (Label block_1))
   (Jmp (Label block_2))
   (Global (Label mult))
   (Align 8)
   (Label mult)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 32) (Reg Rsp))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label mult_start))
   (Label mult_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq
   (Label block_3)
   (Movq (Imm 1) (Reg Rax))
   (Jmp (Label factorial_conclusion))
   (Label block_4)
   (Leaq
     (GlobalArg Rip (Label mult))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Leaq
     (GlobalArg Rip (Label factorial))
     (Reg Rcx))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Subq (Imm 1) (Deref Rbp -8))
   (Movq (Deref Rbp -8) (Reg Rdi))
   (IndirectCallq (Reg Rcx))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Deref Rbp -24) (Reg Rdi))
   (Movq (Reg Rcx) (Reg Rsi))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label factorial_start)
   (Movq (Reg Rdi) (Deref Rbp -24))
   (Cmpq (Imm 0) (Deref Rbp -24))
   (JmpIf CC_e (Label block_3))
   (Jmp (Label block_4))
   (Global (Label factorial))
   (Align 8)
   (Label factorial)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 32) (Reg Rsp))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label factorial_start))
   (Label factorial_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq))
