(X86Program
  ((Label main_start)
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Callq (Label read_int))
   (Movq (Reg Rax) (Reg Rbx))
   (Callq (Label read_int))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Reg Rbx) (Reg Rdi))
   (Movq (Deref Rbp -16) (Reg Rsi))
   (IndirectCallq (Deref Rbp -24))
   (Movq (Reg Rax) (Reg Rbx))
   (Movq (Reg Rbx) (Reg Rax))
   (Addq (Imm 41) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label ack_start)
   (Movq (Reg Rdi) (Deref Rbp -40))
   (Movq (Reg Rsi) (Reg Rbx))
   (Cmpq (Imm 0) (Deref Rbp -40))
   (JmpIf CC_e (Label block_3))
   (Jmp (Label block_4))
   (Label block_1)
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Deref Rbp -40) (Reg Rbx))
   (Subq (Imm 1) (Reg Rbx))
   (Movq (Reg Rbx) (Reg Rdi))
   (Movq (Imm 1) (Reg Rsi))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 40) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label block_2)
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Deref Rbp -40) (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Subq (Imm 1) (Deref Rbp -24))
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -32))
   (Subq (Imm 1) (Reg Rbx))
   (Movq (Deref Rbp -40) (Reg Rdi))
   (Movq (Reg Rbx) (Reg Rsi))
   (IndirectCallq (Deref Rbp -32))
   (Movq (Reg Rax) (Reg Rbx))
   (Movq (Deref Rbp -24) (Reg Rdi))
   (Movq (Reg Rbx) (Reg Rsi))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 40) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label block_3)
   (Movq (Imm 1) (Reg Rax))
   (Addq (Reg Rbx) (Reg Rax))
   (Jmp (Label ack_conclusion))
   (Label block_4)
   (Cmpq (Imm 0) (Reg Rbx))
   (JmpIf CC_e (Label block_1))
   (Jmp (Label block_2))
   (Global (Label ack))
   (Align 8)
   (Label ack)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 40) (Reg Rsp))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label ack_start))
   (Label ack_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 40) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq))
