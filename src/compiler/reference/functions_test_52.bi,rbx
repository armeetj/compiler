(X86Program
  ((Def
     (Label main)
     (Finfo2
       (conflicts
         (((VarL $ea.1)
           ((VarL _.1) (RegL Rsp) (RegL R11)))
          ((VarL $tmp.1) ((RegL Rsp) (RegL R15)))
          ((VarL $tmp.2)
           ((VarL $tmp.3) (RegL Rsp) (RegL R15)))
          ((VarL $tmp.3)
           ((VarL $tmp.2) (RegL Rsp) (RegL R15)))
          ((VarL $tmp.4)
           ((VarL $tmp.5) (VarL v.1) (RegL Rsp)))
          ((VarL $tmp.5)
           ((VarL $tmp.4)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((VarL $tmp.6)
           ((VarL $tmp.7)
            (VarL v.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tmp.7)
           ((VarL $tmp.6) (RegL Rsp) (RegL Rax)))
          ((VarL _.1) ((VarL $ea.1) (RegL Rsp)))
          ((VarL _.2) ((RegL Rsp)))
          ((VarL add1) ((RegL Rsp)))
          ((VarL v.1)
           ((VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rbx)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL R12)
            (RegL R13)
            (RegL R14)))
          ((RegL Rsp)
           ((VarL $ea.1)
            (VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL _.1)
            (VarL _.2)
            (VarL add1)
            (VarL v.1)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rax)
           ((VarL $tmp.5)
            (VarL $tmp.7)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rbx) ((VarL v.1)))
          ((RegL Rcx)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL Rdx)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL Rsi)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rdi)))
          ((RegL Rdi)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rsi)))
          ((RegL R8)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R9)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R10)
           ((VarL $tmp.5)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R11)
           ((VarL $ea.1)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL v.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R12) ((VarL v.1)))
          ((RegL R13) ((VarL v.1)))
          ((RegL R14) ((VarL v.1)))
          ((RegL R15)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rflags)))
          ((RegL Rflags) ((RegL Rsp) (RegL R15))))))
     ((nparams 0)
      (locals
        (($ea.1 (Vector (Integer)))
         ($tmp.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4 Integer)
         ($tmp.5 (Function (Integer) Integer))
         ($tmp.6 Integer)
         ($tmp.7 Integer)
         (_.1 Unit)
         (_.2 Unit)
         (add1 (Function (Integer) Integer))
         (v.1 (Vector (Integer)))))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 16)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 3) (Deref R11 0))
             (Movq (Reg R11) (Var $ea.1))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 41) (Deref R11 8))
             (Movq (Imm 0) (Var _.1))
             (Movq (Var $ea.1) (Var v.1))
             (Leaq
               (GlobalArg (Label add1))
               (Var $tmp.5))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Var $tmp.4))
             (Movq (Var $tmp.4) (Reg Rdi))
             (IndirectCallq (Var $tmp.5) 1)
             (Movq (Reg Rax) (Var $tmp.6))
             (Movq (Var v.1) (Reg R11))
             (Movq (Deref R11 8) (Var $tmp.7))
             (Movq (Var $tmp.6) (Reg Rax))
             (Addq (Var $tmp.7) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label block_2)
          (Block
            Binfo1
            ((Movq (Imm 0) (Var _.2))
             (Jmp (Label block_1)))))
         ((Label block_3)
          (Block
            Binfo1
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 16) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_1)))))
         ((Label main_start)
          (Block
            Binfo1
            ((Movq
               (GlobalArg (Label free_ptr))
               (Var $tmp.1))
             (Movq (Var $tmp.1) (Var $tmp.2))
             (Addq (Imm 16) (Var $tmp.2))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Var $tmp.3))
             (Cmpq (Var $tmp.3) (Var $tmp.2))
             (JmpIf CC_l (Label block_2))
             (Jmp (Label block_3)))))))))
   (Def
     (Label add1)
     (Finfo2
       (conflicts
         (((VarL x.1) ((RegL Rsp)))
          ((RegL Rsp) ((VarL x.1) (RegL Rax)))
          ((RegL Rax) ((RegL Rsp))))))
     ((nparams 1)
      (locals ((x.1 Integer) (x.1 Integer)))
      (body
        (((Label add1_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.1))
             (Movq (Var x.1) (Reg Rax))
             (Addq (Imm 1) (Reg Rax))
             (Jmp (Label add1_conclusion)))))))))))
