(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         ($tmp.2
           (Function
             ((Function
                (Integer
                  Integer
                  Integer
                  Integer
                  Integer
                  (Vector (Integer Integer Integer)))
                Integer))
             Integer))
         ($tmp.3 Integer)
         (g
           (Function
             ((Function
                (Integer
                  Integer
                  Integer
                  Integer
                  Integer
                  (Vector (Integer Integer Integer)))
                Integer))
             Integer))
         (sum_eight
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label g))
               (Var $tmp.2))
             (Leaq
               (GlobalArg (Label sum_eight))
               (Var $tmp.1))
             (Movq (Var $tmp.1) (Reg Rdi))
             (IndirectCallq (Var $tmp.2) 1)
             (Movq (Reg Rax) (Var $tmp.3))
             (Movq (Imm 6) (Reg Rax))
             (Addq (Var $tmp.3) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label sum_eight)
     Finfo1
     ((nparams 6)
      (locals
        ((a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         ($tmp.10 Integer)
         ($tmp.11 Integer)
         ($tmp.12 Integer)
         ($tmp.4 Integer)
         ($tmp.5 Integer)
         ($tmp.6 Integer)
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         (a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)))
      (body
        (((Label sum_eight_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var a.1))
             (Movq (Reg Rsi) (Var b.1))
             (Movq (Reg Rdx) (Var c.1))
             (Movq (Reg Rcx) (Var d.1))
             (Movq (Reg R8) (Var e.1))
             (Movq (Reg R9) (Var $tup.1))
             (Movq (Var a.1) (Var $tmp.4))
             (Addq (Var b.1) (Var $tmp.4))
             (Movq (Var c.1) (Var $tmp.5))
             (Addq (Var d.1) (Var $tmp.5))
             (Movq (Var $tmp.4) (Var $tmp.6))
             (Addq (Var $tmp.5) (Var $tmp.6))
             (Movq (Var $tup.1) (Reg R11))
             (Movq (Deref R11 8) (Var $tmp.7))
             (Movq (Var e.1) (Var $tmp.8))
             (Addq (Var $tmp.7) (Var $tmp.8))
             (Movq (Var $tup.1) (Reg R11))
             (Movq (Deref R11 16) (Var $tmp.9))
             (Movq (Var $tup.1) (Reg R11))
             (Movq (Deref R11 24) (Var $tmp.10))
             (Movq (Var $tmp.9) (Var $tmp.11))
             (Addq (Var $tmp.10) (Var $tmp.11))
             (Movq (Var $tmp.8) (Var $tmp.12))
             (Addq (Var $tmp.11) (Var $tmp.12))
             (Movq (Var $tmp.6) (Reg Rax))
             (Addq (Var $tmp.12) (Reg Rax))
             (Jmp (Label sum_eight_conclusion)))))))))
   (Def
     (Label g)
     Finfo1
     ((nparams 1)
      (locals
        ((f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         ($ea.1
           (Vector (Integer Integer Integer)))
         ($tmp.13 Integer)
         ($tmp.14 Integer)
         ($tmp.15 Integer)
         (_.1 Unit)
         (_.2 Unit)
         (_.3 Unit)
         (_.4 Unit)
         (f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 32)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 7) (Deref R11 0))
             (Movq (Reg R11) (Var $ea.1))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 6) (Deref R11 8))
             (Movq (Imm 0) (Var _.3))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 7) (Deref R11 16))
             (Movq (Imm 0) (Var _.2))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 8) (Deref R11 24))
             (Movq (Imm 0) (Var _.1))
             (Movq (Imm 1) (Reg Rdi))
             (Movq (Imm 2) (Reg Rsi))
             (Movq (Imm 3) (Reg Rdx))
             (Movq (Imm 4) (Reg Rcx))
             (Movq (Imm 5) (Reg R8))
             (Movq (Var $ea.1) (Reg R9))
             (TailJmp (Var f.2) 6))))
         ((Label block_2)
          (Block
            Binfo1
            ((Movq (Imm 0) (Var _.4))
             (Jmp (Label block_1)))))
         ((Label block_3)
          (Block
            Binfo1
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 32) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_1)))))
         ((Label g_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var f.2))
             (Movq
               (GlobalArg (Label free_ptr))
               (Var $tmp.13))
             (Movq (Var $tmp.13) (Var $tmp.14))
             (Addq (Imm 32) (Var $tmp.14))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Var $tmp.15))
             (Cmpq (Var $tmp.15) (Var $tmp.14))
             (JmpIf CC_l (Label block_2))
             (Jmp (Label block_3)))))))))))
