block_1:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, %rcx
    movq $42, 8(%r11)
    movq $0, -8(%rbp)
    movq %rcx, %rdi
    movq -24(%rbp), %rax
    addq $32, %rsp
    popq %rbp
    jmp *%rax

block_2:
    movq $0, %rcx
    jmp block_1

block_3:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block_1

main_start:
    leaq f(%rip), %rax
    movq %rax, -24(%rbp)
    movq free_ptr(%rip), %rax
    movq %rax, -8(%rbp)
    addq $16, -8(%rbp)
    movq fromspace_end(%rip), %rax
    movq %rax, -16(%rbp)
    cmpq %rax, -8(%rbp)
    jl block_2
    jmp block_3

    .globl main
    .align 8

main:
    pushq %rbp
    movq %rsp, %rbp
    subq $32, %rsp
    movq $65536, %rdi
    movq $65536, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    jmp main_start

main_conclusion:
    addq $32, %rsp
    popq %rbp
    retq

f_start:
    movq %rdi, %rcx
    movq %rcx, %r11
    movq 8(%r11), %rax
    jmp f_conclusion

    .globl f
    .align 8

f:
    pushq %rbp
    movq %rsp, %rbp
    jmp f_start

f_conclusion:
    popq %rbp
    retq
