(X86Program
  ((Label block_1)
   (Movq (Imm 999) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label block_2)
   (Movq (Imm 42) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label block_3)
   (Movq
     (GlobalArg Rip (Label free_ptr))
     (Reg R11))
   (Addq
     (Imm 16)
     (GlobalArg Rip (Label free_ptr)))
   (Movq (Imm 3) (Deref R11 0))
   (Movq (Reg R11) (Deref R15 -8))
   (Movq (Reg Rbx) (Deref R11 8))
   (Movq (Imm 0) (Reg Rbx))
   (Leaq
     (GlobalArg Rip (Label even?))
     (Reg Rbx))
   (Movq (Deref R15 -8) (Reg R11))
   (Movq (Reg Rbx) (Deref R11 8))
   (Movq (Imm 0) (Reg Rbx))
   (Movq (Deref R15 -8) (Reg R11))
   (Movq (Deref R11 8) (Reg Rbx))
   (Movq (Imm 21) (Reg Rdi))
   (IndirectCallq (Reg Rbx))
   (Movq (Reg Rax) (Reg Rbx))
   (Cmpq (Imm 1) (Reg Rbx))
   (JmpIf CC_e (Label block_1))
   (Jmp (Label block_2))
   (Label block_4)
   (Movq (Imm 0) (Deref Rbp -16))
   (Jmp (Label block_3))
   (Label block_5)
   (Movq (Reg R15) (Reg Rdi))
   (Movq (Imm 16) (Reg Rsi))
   (Callq (Label collect))
   (Jmp (Label block_3))
   (Label main_start)
   (Leaq
     (GlobalArg Rip (Label odd?))
     (Reg Rbx))
   (Movq
     (GlobalArg Rip (Label free_ptr))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Addq (Imm 16) (Deref Rbp -16))
   (Movq
     (GlobalArg Rip (Label fromspace_end))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Cmpq (Reg Rax) (Deref Rbp -16))
   (JmpIf CC_l (Label block_4))
   (Jmp (Label block_5))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Movq (Imm 0) (Deref R15 0))
   (Addq (Imm 8) (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Subq (Imm 8) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label block_6)
   (Movq (Imm 1) (Reg Rax))
   (Jmp (Label even?_conclusion))
   (Label block_7)
   (Leaq
     (GlobalArg Rip (Label odd?))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Movq (Imm 1) (Deref Rbp -16))
   (Negq (Deref Rbp -16))
   (Addq (Reg Rbx) (Deref Rbp -16))
   (Movq (Deref Rbp -16) (Reg Rdi))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label even?_start)
   (Movq (Reg Rdi) (Reg Rbx))
   (Cmpq (Imm 0) (Reg Rbx))
   (JmpIf CC_e (Label block_6))
   (Jmp (Label block_7))
   (Global (Label even?))
   (Align 8)
   (Label even?)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Jmp (Label even?_start))
   (Label even?_conclusion)
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label block_8)
   (Movq (Imm 0) (Reg Rax))
   (Jmp (Label odd?_conclusion))
   (Label block_9)
   (Leaq
     (GlobalArg Rip (Label even?))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Movq (Imm 1) (Deref Rbp -16))
   (Negq (Deref Rbp -16))
   (Addq (Reg Rbx) (Deref Rbp -16))
   (Movq (Deref Rbp -16) (Reg Rdi))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label odd?_start)
   (Movq (Reg Rdi) (Reg Rbx))
   (Cmpq (Imm 0) (Reg Rbx))
   (JmpIf CC_e (Label block_8))
   (Jmp (Label block_9))
   (Global (Label odd?))
   (Align 8)
   (Label odd?)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Jmp (Label odd?_start))
   (Label odd?_conclusion)
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq))
