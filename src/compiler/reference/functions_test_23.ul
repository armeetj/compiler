(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         ($tmp.3
           (Function
             (Integer Integer Integer)
             Integer))
         ($tmp.4 Integer)
         (f (Function (Integer) Integer))
         (g
           (Function
             (Integer Integer Integer)
             Integer))))
      (body
        (((Label main_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters
                 (((VarL $tmp.1) (RegL Rsp))
                  ((VarL $tmp.1) (RegL Rsp) (RegL Rdi))
                  ((RegL Rsp) (RegL Rax))
                  ((VarL $tmp.2) (RegL Rsp))
                  ((VarL $tmp.2) (VarL $tmp.3) (RegL Rsp))
                  ((VarL $tmp.2)
                   (VarL $tmp.3)
                   (RegL Rsp)
                   (RegL Rdi))
                  ((VarL $tmp.2)
                   (VarL $tmp.3)
                   (RegL Rsp)
                   (RegL Rsi)
                   (RegL Rdi))
                  ((VarL $tmp.2)
                   (VarL $tmp.3)
                   (RegL Rsp)
                   (RegL Rdx)
                   (RegL Rsi)
                   (RegL Rdi))
                  ((VarL $tmp.2) (RegL Rsp) (RegL Rax))
                  ((VarL $tmp.2) (VarL $tmp.4) (RegL Rsp))
                  ((VarL $tmp.4) (RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Leaq
               (GlobalArg (Label f))
               (Var $tmp.1))
             (Movq (Imm 8) (Reg Rdi))
             (IndirectCallq (Var $tmp.1) 1)
             (Movq (Reg Rax) (Var $tmp.2))
             (Leaq
               (GlobalArg (Label g))
               (Var $tmp.3))
             (Movq (Imm 8) (Reg Rdi))
             (Movq (Imm 0) (Reg Rsi))
             (Movq (Imm 1) (Reg Rdx))
             (IndirectCallq (Var $tmp.3) 3)
             (Movq (Reg Rax) (Var $tmp.4))
             (Movq (Var $tmp.2) (Reg Rax))
             (Addq (Var $tmp.4) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label f)
     Finfo1
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($tmp.10 Integer)
         ($tmp.5 Integer)
         ($tmp.6 (Function (Integer) Integer))
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 (Function (Integer) Integer))
         (f (Function (Integer) Integer))
         (x.1 Integer)))
      (body
        (((Label block_1)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Imm 1) (Reg Rax))
             (Jmp (Label f_conclusion)))))
         ((Label block_2)
          (Block
            (Binfo2
              ((initial ((VarL x.1) (RegL Rsp)))
               (afters
                 (((VarL $tmp.6) (VarL x.1) (RegL Rsp))
                  ((VarL $tmp.5)
                   (VarL $tmp.6)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.5)
                   (VarL $tmp.6)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.6)
                   (VarL x.1)
                   (RegL Rsp)
                   (RegL Rdi))
                  ((VarL x.1) (RegL Rsp) (RegL Rax))
                  ((VarL $tmp.7) (VarL x.1) (RegL Rsp))
                  ((VarL $tmp.7)
                   (VarL $tmp.9)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.7)
                   (VarL $tmp.8)
                   (VarL $tmp.9)
                   (RegL Rsp))
                  ((VarL $tmp.7)
                   (VarL $tmp.8)
                   (VarL $tmp.9)
                   (RegL Rsp))
                  ((VarL $tmp.7)
                   (VarL $tmp.9)
                   (RegL Rsp)
                   (RegL Rdi))
                  ((VarL $tmp.7) (RegL Rsp) (RegL Rax))
                  ((VarL $tmp.10)
                   (VarL $tmp.7)
                   (RegL Rsp))
                  ((VarL $tmp.10) (RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Leaq
               (GlobalArg (Label f))
               (Var $tmp.6))
             (Movq (Var x.1) (Var $tmp.5))
             (Subq (Imm 1) (Var $tmp.5))
             (Movq (Var $tmp.5) (Reg Rdi))
             (IndirectCallq (Var $tmp.6) 1)
             (Movq (Reg Rax) (Var $tmp.7))
             (Leaq
               (GlobalArg (Label f))
               (Var $tmp.9))
             (Movq (Var x.1) (Var $tmp.8))
             (Subq (Imm 2) (Var $tmp.8))
             (Movq (Var $tmp.8) (Reg Rdi))
             (IndirectCallq (Var $tmp.9) 1)
             (Movq (Reg Rax) (Var $tmp.10))
             (Movq (Var $tmp.7) (Reg Rax))
             (Addq (Var $tmp.10) (Reg Rax))
             (Jmp (Label f_conclusion)))))
         ((Label block_3)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label f_conclusion)))))
         ((Label block_4)
          (Block
            (Binfo2
              ((initial ((VarL x.1) (RegL Rsp)))
               (afters
                 (((VarL x.1) (RegL Rsp) (RegL Rflags))
                  ((VarL x.1) (RegL Rsp))
                  ()))))
            ((Cmpq (Imm 1) (Var x.1))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))
         ((Label f_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp) (RegL Rdi)))
               (afters
                 (((VarL x.1) (RegL Rsp))
                  ((VarL x.1) (RegL Rsp) (RegL Rflags))
                  ((VarL x.1) (RegL Rsp))
                  ()))))
            ((Movq (Reg Rdi) (Var x.1))
             (Cmpq (Imm 0) (Var x.1))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))
   (Def
     (Label g)
     Finfo1
     ((nparams 3)
      (locals
        ((x.2 Integer)
         (y.1 Integer)
         (z.1 Integer)
         ($tmp.11 Integer)
         ($tmp.12 Integer)
         ($tmp.13
           (Function
             (Integer Integer Integer)
             Integer))
         (g
           (Function
             (Integer Integer Integer)
             Integer))
         (x.2 Integer)
         (y.1 Integer)
         (z.1 Integer)))
      (body
        (((Label block_5)
          (Block
            (Binfo2
              ((initial ((VarL z.1) (RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Var z.1) (Reg Rax))
             (Jmp (Label g_conclusion)))))
         ((Label block_6)
          (Block
            (Binfo2
              ((initial
                 ((VarL x.2) (VarL y.1) (VarL z.1)))
               (afters
                 (((VarL $tmp.13)
                   (VarL x.2)
                   (VarL y.1)
                   (VarL z.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.13)
                   (VarL y.1)
                   (VarL z.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.13)
                   (VarL y.1)
                   (VarL z.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.12)
                   (VarL $tmp.13)
                   (VarL z.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.12)
                   (VarL $tmp.13)
                   (VarL z.1))
                  ((VarL $tmp.12)
                   (VarL $tmp.13)
                   (VarL z.1)
                   (RegL Rdi))
                  ((VarL $tmp.12)
                   (VarL $tmp.13)
                   (RegL Rsi)
                   (RegL Rdi))
                  ((VarL $tmp.13)
                   (RegL Rdx)
                   (RegL Rsi)
                   (RegL Rdi))
                  ()))))
            ((Leaq
               (GlobalArg (Label g))
               (Var $tmp.13))
             (Movq (Var x.2) (Var $tmp.11))
             (Subq (Imm 1) (Var $tmp.11))
             (Movq (Var y.1) (Var $tmp.12))
             (Addq (Var z.1) (Var $tmp.12))
             (Movq (Var $tmp.11) (Reg Rdi))
             (Movq (Var z.1) (Reg Rsi))
             (Movq (Var $tmp.12) (Reg Rdx))
             (TailJmp (Var $tmp.13) 3))))
         ((Label block_7)
          (Block
            (Binfo2
              ((initial ((VarL y.1) (RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Var y.1) (Reg Rax))
             (Jmp (Label g_conclusion)))))
         ((Label block_8)
          (Block
            (Binfo2
              ((initial
                 ((VarL x.2)
                  (VarL y.1)
                  (VarL z.1)
                  (RegL Rsp)))
               (afters
                 (((VarL x.2)
                   (VarL y.1)
                   (VarL z.1)
                   (RegL Rsp)
                   (RegL Rflags))
                  ((VarL x.2) (VarL y.1) (VarL z.1))
                  ()))))
            ((Cmpq (Imm 1) (Var x.2))
             (JmpIf CC_e (Label block_5))
             (Jmp (Label block_6)))))
         ((Label g_start)
          (Block
            (Binfo2
              ((initial
                 ((RegL Rsp)
                  (RegL Rdx)
                  (RegL Rsi)
                  (RegL Rdi)))
               (afters
                 (((VarL x.2)
                   (RegL Rsp)
                   (RegL Rdx)
                   (RegL Rsi))
                  ((VarL x.2)
                   (VarL y.1)
                   (RegL Rsp)
                   (RegL Rdx))
                  ((VarL x.2)
                   (VarL y.1)
                   (VarL z.1)
                   (RegL Rsp))
                  ((VarL x.2)
                   (VarL y.1)
                   (VarL z.1)
                   (RegL Rsp)
                   (RegL Rflags))
                  ((VarL x.2)
                   (VarL y.1)
                   (VarL z.1)
                   (RegL Rsp))
                  ()))))
            ((Movq (Reg Rdi) (Var x.2))
             (Movq (Reg Rsi) (Var y.1))
             (Movq (Reg Rdx) (Var z.1))
             (Cmpq (Imm 0) (Var x.2))
             (JmpIf CC_e (Label block_7))
             (Jmp (Label block_8)))))))))))
