(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         ($tmp.3
           (Function
             ((Function (Integer) Integer) Integer)
             Integer))
         (apply
           (Function
             ((Function (Integer) Integer) Integer)
             Integer))
         (inc (Function (Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label apply))
               (Var $tmp.3))
             (Leaq
               (GlobalArg (Label inc))
               (Var $tmp.1))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Var $tmp.2))
             (Movq (Var $tmp.1) (Reg Rdi))
             (Movq (Var $tmp.2) (Reg Rsi))
             (TailJmp (Var $tmp.3) 2))))))))
   (Def
     (Label apply)
     Finfo1
     ((nparams 2)
      (locals
        ((f.1 (Function (Integer) Integer))
         (x.1 Integer)
         ($tmp.4 Integer)
         (f.1 (Function (Integer) Integer))
         (x.1 Integer)))
      (body
        (((Label apply_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var f.1))
             (Movq (Reg Rsi) (Var x.1))
             (Movq (Var x.1) (Reg Rdi))
             (IndirectCallq (Var f.1) 1)
             (Movq (Reg Rax) (Var $tmp.4))
             (Movq (Var $tmp.4) (Reg Rdi))
             (TailJmp (Var f.1) 1))))))))
   (Def
     (Label inc)
     Finfo1
     ((nparams 1)
      (locals ((x.2 Integer) (x.2 Integer)))
      (body
        (((Label inc_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.2))
             (Movq (Var x.2) (Reg Rax))
             (Addq (Imm 1) (Reg Rax))
             (Jmp (Label inc_conclusion)))))))))))
