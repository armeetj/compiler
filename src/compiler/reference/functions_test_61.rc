(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $tmp.4
          (FunRef (Label h) 6)
          (Let
            _.3
            (If
              (Let
                $tmp.1
                (GlobalVal free_ptr)
                (Let
                  $tmp.2
                  (Prim Add ((Var $tmp.1) (Int 24)))
                  (Let
                    $tmp.3
                    (GlobalVal fromspace_end)
                    (Prim Lt ((Var $tmp.2) (Var $tmp.3))))))
              (Atm Void)
              (Collect 24))
            (Let
              $ea.1
              (Allocate 2 (Vector (Integer Integer)))
              (Let
                _.2
                (VecSet (Var $ea.1) 0 (Int 1))
                (Let
                  _.1
                  (VecSet (Var $ea.1) 1 (Int 0))
                  (Apply
                    (Var $tmp.4)
                    ((Int 0)
                     (Int 0)
                     (Int 0)
                     (Int 0)
                     (Int 0)
                     (Var $ea.1)))))))))))
   (Def
     (Label h)
     ((args
        ((a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)
         ($tup.1 (Vector (Integer Integer)))))
      (ret Integer)
      (body
        (Let
          $tmp.5
          (VecRef (Var $tup.1) 0)
          (Let
            $tmp.6
            (VecRef (Var $tup.1) 1)
            (Let
              $tmp.7
              (Prim Add ((Var $tmp.5) (Var $tmp.6)))
              (Let
                $tmp.8
                (Prim Add ((Var e.1) (Var $tmp.7)))
                (Let
                  $tmp.9
                  (Prim Add ((Var d.1) (Var $tmp.8)))
                  (Let
                    $tmp.10
                    (Prim Add ((Var c.1) (Var $tmp.9)))
                    (Let
                      $tmp.11
                      (Prim Add ((Var b.1) (Var $tmp.10)))
                      (Prim Add ((Var a.1) (Var $tmp.11)))))))))))))))
