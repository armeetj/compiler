(X86Program
  ((Label block_1)
   (Movq
     (GlobalArg Rip (Label free_ptr))
     (Reg R11))
   (Addq
     (Imm 32)
     (GlobalArg Rip (Label free_ptr)))
   (Movq (Imm 7) (Deref R11 0))
   (Movq (Reg R11) (Reg Rcx))
   (Movq (Imm 1) (Deref R11 8))
   (Movq (Imm 0) (Reg Rbx))
   (Movq (Reg Rcx) (Reg R11))
   (Movq (Imm 2) (Deref R11 16))
   (Movq (Imm 0) (Reg Rbx))
   (Movq (Reg Rcx) (Reg R11))
   (Movq (Imm 3) (Deref R11 24))
   (Movq (Imm 0) (Reg Rbx))
   (Leaq
     (GlobalArg Rip (Label mapint))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Leaq
     (GlobalArg Rip (Label add1))
     (Reg Rbx))
   (Movq (Reg Rbx) (Reg Rdi))
   (Movq (Reg Rcx) (Reg Rsi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Deref Rbp -16) (Reg R11))
   (Movq (Deref R11 8) (Reg Rbx))
   (Movq (Deref Rbp -16) (Reg R11))
   (Movq (Deref R11 16) (Reg Rcx))
   (Movq (Deref Rbp -16) (Reg R11))
   (Movq (Deref R11 24) (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Addq (Imm 33) (Deref Rbp -16))
   (Addq (Deref Rbp -16) (Reg Rcx))
   (Movq (Reg Rbx) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label block_2)
   (Movq (Imm 0) (Reg Rcx))
   (Jmp (Label block_1))
   (Label block_3)
   (Movq (Reg R15) (Reg Rdi))
   (Movq (Imm 32) (Reg Rsi))
   (Callq (Label collect))
   (Jmp (Label block_1))
   (Label main_start)
   (Movq
     (GlobalArg Rip (Label free_ptr))
     (Reg Rcx))
   (Addq (Imm 32) (Reg Rcx))
   (Movq
     (GlobalArg Rip (Label fromspace_end))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Cmpq (Deref Rbp -16) (Reg Rcx))
   (JmpIf CC_l (Label block_2))
   (Jmp (Label block_3))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 8) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label block_4)
   (Movq
     (GlobalArg Rip (Label free_ptr))
     (Reg R11))
   (Addq
     (Imm 32)
     (GlobalArg Rip (Label free_ptr)))
   (Movq (Imm 7) (Deref R11 0))
   (Movq (Reg R11) (Deref R15 -8))
   (Movq (Reg Rbx) (Deref R11 8))
   (Movq (Imm 0) (Reg Rcx))
   (Movq (Deref R15 -8) (Reg R11))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Movq (Reg Rax) (Deref R11 16))
   (Movq (Imm 0) (Reg Rcx))
   (Movq (Deref R15 -8) (Reg R11))
   (Movq (Deref Rbp -24) (Reg Rax))
   (Movq (Reg Rax) (Deref R11 24))
   (Movq (Imm 0) (Reg Rcx))
   (Movq (Deref R15 -8) (Reg Rax))
   (Jmp (Label mapint_conclusion))
   (Label block_5)
   (Movq (Imm 0) (Reg Rcx))
   (Jmp (Label block_4))
   (Label block_6)
   (Movq (Reg R15) (Reg Rdi))
   (Movq (Imm 32) (Reg Rsi))
   (Callq (Label collect))
   (Jmp (Label block_4))
   (Label mapint_start)
   (Movq (Reg Rdi) (Deref Rbp -24))
   (Movq (Reg Rsi) (Deref Rbp -32))
   (Movq (Deref Rbp -32) (Reg R11))
   (Movq (Deref R11 8) (Reg Rcx))
   (Movq (Reg Rcx) (Reg Rdi))
   (IndirectCallq (Deref Rbp -24))
   (Movq (Reg Rax) (Reg Rbx))
   (Movq (Deref Rbp -32) (Reg R11))
   (Movq (Deref R11 16) (Reg Rcx))
   (Movq (Reg Rcx) (Reg Rdi))
   (IndirectCallq (Deref Rbp -24))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Movq (Deref Rbp -32) (Reg R11))
   (Movq (Deref R11 24) (Reg Rcx))
   (Movq (Reg Rcx) (Reg Rdi))
   (IndirectCallq (Deref Rbp -24))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Movq
     (GlobalArg Rip (Label free_ptr))
     (Reg Rcx))
   (Addq (Imm 32) (Reg Rcx))
   (Movq
     (GlobalArg Rip (Label fromspace_end))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -32))
   (Cmpq (Deref Rbp -32) (Reg Rcx))
   (JmpIf CC_l (Label block_5))
   (Jmp (Label block_6))
   (Global (Label mapint))
   (Align 8)
   (Label mapint)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Movq (Imm 0) (Deref R15 0))
   (Addq (Imm 8) (Reg R15))
   (Jmp (Label mapint_start))
   (Label mapint_conclusion)
   (Subq (Imm 8) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label add1_start)
   (Movq (Reg Rdi) (Reg Rcx))
   (Movq (Imm 1) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label add1_conclusion))
   (Global (Label add1))
   (Align 8)
   (Label add1)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Jmp (Label add1_start))
   (Label add1_conclusion)
   (Popq (Reg Rbp))
   Retq))
