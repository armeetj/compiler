block_1:
    movq $42, %rax
    jmp main_conclusion

block_2:
    movq $777, %rax
    jmp main_conclusion

main_start:
    leaq sum(%rip), %rax
    movq %rax, -8(%rbp)
    movq $3, %rdi
    callq *-8(%rbp)
    movq %rax, %rcx
    cmpq $6, %rcx
    je block_1
    jmp block_2

    .globl main
    .align 8

main:
    pushq %rbp
    movq %rsp, %rbp
    subq $16, %rsp
    movq $65536, %rdi
    movq $65536, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    jmp main_start

main_conclusion:
    addq $16, %rsp
    popq %rbp
    retq

block_3:
    movq $1, %rax
    jmp sum_conclusion

block_4:
    leaq sum(%rip), %rax
    movq %rax, -16(%rbp)
    movq $1, %rcx
    negq %rcx
    movq -24(%rbp), %rax
    movq %rax, -8(%rbp)
    addq %rcx, -8(%rbp)
    movq -8(%rbp), %rdi
    callq *-16(%rbp)
    movq %rax, %rcx
    movq -24(%rbp), %rax
    addq %rcx, %rax
    jmp sum_conclusion

sum_start:
    movq %rdi, -24(%rbp)
    cmpq $1, -24(%rbp)
    je block_3
    jmp block_4

    .globl sum
    .align 8

sum:
    pushq %rbp
    movq %rsp, %rbp
    subq $32, %rsp
    jmp sum_start

sum_conclusion:
    addq $32, %rsp
    popq %rbp
    retq
