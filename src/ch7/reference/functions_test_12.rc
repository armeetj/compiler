(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $tmp.7
          (FunRef (Label f) 2)
          (Let
            $ea.2
            (FunRef (Label id) 1)
            (Let
              $ea.3
              (Let
                _.2
                (If
                  (Let
                    $tmp.1
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.2
                      (Prim Add ((Var $tmp.1) (Int 16)))
                      (Let
                        $tmp.3
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.2) (Var $tmp.3))))))
                  (Atm Void)
                  (Collect 16))
                (Let
                  $ea.1
                  (Allocate 1 (Vector (Integer)))
                  (Let
                    _.1
                    (VecSet (Var $ea.1) 0 (Int 42))
                    (Atm (Var $ea.1)))))
              (Let
                _.5
                (If
                  (Let
                    $tmp.4
                    (GlobalVal free_ptr)
                    (Let
                      $tmp.5
                      (Prim Add ((Var $tmp.4) (Int 24)))
                      (Let
                        $tmp.6
                        (GlobalVal fromspace_end)
                        (Prim Lt ((Var $tmp.5) (Var $tmp.6))))))
                  (Atm Void)
                  (Collect 24))
                (Let
                  $ea.4
                  (Allocate
                    2
                    (Vector
                      ((Function (Integer) Integer)
                       (Vector (Integer)))))
                  (Let
                    _.4
                    (VecSet (Var $ea.4) 0 (Var $ea.2))
                    (Let
                      _.3
                      (VecSet (Var $ea.4) 1 (Var $ea.3))
                      (Apply
                        (Var $tmp.7)
                        ((Int 0) (Var $ea.4)))))))))))))
   (Def
     (Label id)
     ((args ((x.1 Integer)))
      (ret Integer)
      (body (Atm (Var x.1)))))
   (Def
     (Label f)
     ((args
        ((n.1 Integer)
         (clos.1
           (Vector
             ((Function (Integer) Integer)
              (Vector (Integer)))))))
      (ret Integer)
      (body
        (If
          (Prim Eq ((Var n.1) (Int 100)))
          (Let
            $tmp.10
            (VecRef (Var clos.1) 0)
            (Let
              $tmp.8
              (VecRef (Var clos.1) 1)
              (Let
                $tmp.9
                (VecRef (Var $tmp.8) 0)
                (Apply (Var $tmp.10) ((Var $tmp.9))))))
          (Let
            $tmp.15
            (FunRef (Label f) 2)
            (Let
              $tmp.11
              (Prim Add ((Var n.1) (Int 1)))
              (Let
                $ea.5
                (VecRef (Var clos.1) 0)
                (Let
                  $ea.6
                  (VecRef (Var clos.1) 1)
                  (Let
                    _.8
                    (If
                      (Let
                        $tmp.12
                        (GlobalVal free_ptr)
                        (Let
                          $tmp.13
                          (Prim Add ((Var $tmp.12) (Int 24)))
                          (Let
                            $tmp.14
                            (GlobalVal fromspace_end)
                            (Prim Lt ((Var $tmp.13) (Var $tmp.14))))))
                      (Atm Void)
                      (Collect 24))
                    (Let
                      $ea.7
                      (Allocate
                        2
                        (Vector
                          ((Function (Integer) Integer)
                           (Vector (Integer)))))
                      (Let
                        _.7
                        (VecSet (Var $ea.7) 0 (Var $ea.5))
                        (Let
                          _.6
                          (VecSet (Var $ea.7) 1 (Var $ea.6))
                          (Apply
                            (Var $tmp.15)
                            ((Var $tmp.11) (Var $ea.7)))))))))))))))))
