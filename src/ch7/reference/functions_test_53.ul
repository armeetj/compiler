(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3
           (Function (Integer Integer) Integer))
         ($tmp.4 Integer)
         (ack
           (Function (Integer Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters
                 (((VarL $tmp.3) (RegL Rsp))
                  ((VarL $tmp.3) (RegL Rsp) (RegL Rax))
                  ((VarL $tmp.1) (VarL $tmp.3) (RegL Rsp))
                  ((VarL $tmp.1)
                   (VarL $tmp.3)
                   (RegL Rsp)
                   (RegL Rax))
                  ((VarL $tmp.1)
                   (VarL $tmp.2)
                   (VarL $tmp.3)
                   (RegL Rsp))
                  ((VarL $tmp.2)
                   (VarL $tmp.3)
                   (RegL Rsp)
                   (RegL Rdi))
                  ((VarL $tmp.3)
                   (RegL Rsp)
                   (RegL Rsi)
                   (RegL Rdi))
                  ((RegL Rsp) (RegL Rax))
                  ((VarL $tmp.4) (RegL Rsp))
                  ((RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Leaq
               (GlobalArg (Label ack))
               (Var $tmp.3))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Var $tmp.1))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Var $tmp.2))
             (Movq (Var $tmp.1) (Reg Rdi))
             (Movq (Var $tmp.2) (Reg Rsi))
             (IndirectCallq (Var $tmp.3) 2)
             (Movq (Reg Rax) (Var $tmp.4))
             (Movq (Var $tmp.4) (Reg Rax))
             (Addq (Imm 41) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label ack)
     Finfo1
     ((nparams 2)
      (locals
        ((m.1 Integer)
         (n.1 Integer)
         ($tmp.10 Integer)
         ($tmp.11
           (Function (Integer Integer) Integer))
         ($tmp.5 Integer)
         ($tmp.6
           (Function (Integer Integer) Integer))
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9
           (Function (Integer Integer) Integer))
         (ack
           (Function (Integer Integer) Integer))
         (m.1 Integer)
         (n.1 Integer)))
      (body
        (((Label block_1)
          (Block
            (Binfo2
              ((initial ((VarL m.1)))
               (afters
                 (((VarL $tmp.6) (VarL m.1))
                  ((VarL $tmp.5) (VarL $tmp.6))
                  ((VarL $tmp.5) (VarL $tmp.6))
                  ((VarL $tmp.6) (RegL Rdi))
                  ((VarL $tmp.6) (RegL Rsi) (RegL Rdi))
                  ()))))
            ((Leaq
               (GlobalArg (Label ack))
               (Var $tmp.6))
             (Movq (Var m.1) (Var $tmp.5))
             (Subq (Imm 1) (Var $tmp.5))
             (Movq (Var $tmp.5) (Reg Rdi))
             (Movq (Imm 1) (Reg Rsi))
             (TailJmp (Var $tmp.6) 2))))
         ((Label block_2)
          (Block
            (Binfo2
              ((initial ((VarL m.1) (VarL n.1)))
               (afters
                 (((VarL $tmp.11) (VarL m.1) (VarL n.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL m.1)
                   (VarL n.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL m.1)
                   (VarL n.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL $tmp.9)
                   (VarL m.1)
                   (VarL n.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL $tmp.8)
                   (VarL $tmp.9)
                   (VarL m.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL $tmp.8)
                   (VarL $tmp.9)
                   (VarL m.1))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL $tmp.8)
                   (VarL $tmp.9)
                   (RegL Rdi))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (VarL $tmp.9)
                   (RegL Rsi)
                   (RegL Rdi))
                  ((VarL $tmp.11)
                   (VarL $tmp.7)
                   (RegL Rax))
                  ((VarL $tmp.10)
                   (VarL $tmp.11)
                   (VarL $tmp.7))
                  ((VarL $tmp.10)
                   (VarL $tmp.11)
                   (RegL Rdi))
                  ((VarL $tmp.11) (RegL Rsi) (RegL Rdi))
                  ()))))
            ((Leaq
               (GlobalArg (Label ack))
               (Var $tmp.11))
             (Movq (Var m.1) (Var $tmp.7))
             (Subq (Imm 1) (Var $tmp.7))
             (Leaq
               (GlobalArg (Label ack))
               (Var $tmp.9))
             (Movq (Var n.1) (Var $tmp.8))
             (Subq (Imm 1) (Var $tmp.8))
             (Movq (Var m.1) (Reg Rdi))
             (Movq (Var $tmp.8) (Reg Rsi))
             (IndirectCallq (Var $tmp.9) 2)
             (Movq (Reg Rax) (Var $tmp.10))
             (Movq (Var $tmp.7) (Reg Rdi))
             (Movq (Var $tmp.10) (Reg Rsi))
             (TailJmp (Var $tmp.11) 2))))
         ((Label block_3)
          (Block
            (Binfo2
              ((initial ((VarL n.1) (RegL Rsp)))
               (afters
                 (((VarL n.1) (RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Movq (Imm 1) (Reg Rax))
             (Addq (Var n.1) (Reg Rax))
             (Jmp (Label ack_conclusion)))))
         ((Label block_4)
          (Block
            (Binfo2
              ((initial ((VarL m.1) (VarL n.1)))
               (afters
                 (((VarL m.1) (VarL n.1) (RegL Rflags))
                  ((VarL m.1) (VarL n.1))
                  ()))))
            ((Cmpq (Imm 0) (Var n.1))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))
         ((Label ack_start)
          (Block
            (Binfo2
              ((initial
                 ((RegL Rsp) (RegL Rsi) (RegL Rdi)))
               (afters
                 (((VarL m.1) (RegL Rsp) (RegL Rsi))
                  ((VarL m.1) (VarL n.1) (RegL Rsp))
                  ((VarL m.1)
                   (VarL n.1)
                   (RegL Rsp)
                   (RegL Rflags))
                  ((VarL m.1) (VarL n.1))
                  ()))))
            ((Movq (Reg Rdi) (Var m.1))
             (Movq (Reg Rsi) (Var n.1))
             (Cmpq (Imm 0) (Var m.1))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))))
