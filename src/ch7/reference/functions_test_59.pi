(X86Program
  ((Def
     (Label main)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee (Rbx)))
     ((nparams 0)
      (locals
        (($ea.1
           (Vector (Integer Integer Integer)))
         ($tmp.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4
           (Function
             (Integer)
             (Function
               (Integer
                 Integer
                 Integer
                 Integer
                 Integer
                 (Vector (Integer Integer Integer)))
               Integer)))
         ($tmp.5
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         (_.1 Unit)
         (_.2 Unit)
         (_.3 Unit)
         (_.4 Unit)
         (rf
           (Function
             (Integer)
             (Function
               (Integer
                 Integer
                 Integer
                 Integer
                 Integer
                 (Vector (Integer Integer Integer)))
               Integer)))))
      (body
        (((Label block_1)
          (Block
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 32)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 7) (Deref R11 0))
             (Movq (Reg R11) (Reg R9))
             (Movq (Reg R9) (Reg R11))
             (Movq (Imm 5) (Deref R11 8))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Reg R9) (Reg R11))
             (Movq (Imm 6) (Deref R11 16))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Reg R9) (Reg R11))
             (Movq (Imm 7) (Deref R11 24))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Imm 42) (Reg Rdi))
             (Movq (Imm 1) (Reg Rsi))
             (Movq (Imm 2) (Reg Rdx))
             (Movq (Imm 3) (Reg Rcx))
             (Movq (Imm 4) (Reg R8))
             (Movq (Reg Rbx) (Reg Rax))
             (TailJmp (Reg Rax) 6))))
         ((Label block_2)
          (Block
            ((Movq (Imm 0) (Reg Rcx))
             (Jmp (Label block_1)))))
         ((Label block_3)
          (Block
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 32) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_1)))))
         ((Label main_start)
          (Block
            ((Leaq (GlobalArg (Label rf)) (Reg Rcx))
             (Movq (Imm 0) (Reg Rdi))
             (IndirectCallq (Reg Rcx) 1)
             (Movq (Reg Rax) (Reg Rbx))
             (Movq
               (GlobalArg (Label free_ptr))
               (Reg Rcx))
             (Addq (Imm 32) (Reg Rcx))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Reg Rdx))
             (Cmpq (Reg Rdx) (Reg Rcx))
             (JmpIf CC_l (Label block_2))
             (Jmp (Label block_3)))))))))
   (Def
     (Label f)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 6)
      (locals
        ((x1.1 Integer)
         (x2.1 Integer)
         (x3.1 Integer)
         (x4.1 Integer)
         (x5.1 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         (x1.1 Integer)))
      (body
        (((Label f_start)
          (Block
            ((Movq (Reg R8) (Reg Rcx))
             (Movq (Reg R9) (Reg Rcx))
             (Movq (Reg Rdi) (Reg Rax))
             (Jmp (Label f_conclusion)))))))))
   (Def
     (Label rf)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 1)
      (locals
        ((x.1 Integer)
         (f
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label rf_start)
          (Block
            ((Movq (Reg Rdi) (Reg Rcx))
             (Leaq (GlobalArg (Label f)) (Reg Rax))
             (Jmp (Label rf_conclusion)))))))))))
