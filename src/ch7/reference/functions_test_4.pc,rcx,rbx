(X86Program
  ((Label block_1)
   (Movq (Imm 42) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label block_2)
   (Movq (Imm 777) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Label main_start)
   (Leaq
     (GlobalArg Rip (Label sum))
     (Reg Rbx))
   (Movq (Imm 3) (Reg Rdi))
   (IndirectCallq (Reg Rbx))
   (Movq (Reg Rax) (Reg Rcx))
   (Cmpq (Imm 6) (Reg Rcx))
   (JmpIf CC_e (Label block_1))
   (Jmp (Label block_2))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 8) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 8) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq
   (Label block_3)
   (Movq (Imm 1) (Reg Rax))
   (Jmp (Label sum_conclusion))
   (Label block_4)
   (Leaq
     (GlobalArg Rip (Label sum))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Movq (Imm 1) (Reg Rcx))
   (Negq (Reg Rcx))
   (Movq (Reg Rbx) (Deref Rbp -16))
   (Addq (Reg Rcx) (Deref Rbp -16))
   (Movq (Deref Rbp -16) (Reg Rdi))
   (IndirectCallq (Deref Rbp -24))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Reg Rbx) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label sum_conclusion))
   (Label sum_start)
   (Movq (Reg Rdi) (Reg Rbx))
   (Cmpq (Imm 1) (Reg Rbx))
   (JmpIf CC_e (Label block_3))
   (Jmp (Label block_4))
   (Global (Label sum))
   (Align 8)
   (Label sum)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Pushq (Reg Rbx))
   (Subq (Imm 24) (Reg Rsp))
   (Addq (Imm 0) (Reg R15))
   (Jmp (Label sum_start))
   (Label sum_conclusion)
   (Subq (Imm 0) (Reg R15))
   (Addq (Imm 24) (Reg Rsp))
   (Popq (Reg Rbx))
   (Popq (Reg Rbp))
   Retq))
