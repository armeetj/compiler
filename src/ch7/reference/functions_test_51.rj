(X86Program
  ((Def
     (Label main)
     (Finfo3
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 0)
      (locals
        (($tmp.1
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         ($tmp.2
           (Function
             ((Function
                (Integer
                  Integer
                  Integer
                  Integer
                  Integer
                  (Vector (Integer Integer Integer)))
                Integer))
             Integer))
         ($tmp.3 Integer)
         (g
           (Function
             ((Function
                (Integer
                  Integer
                  Integer
                  Integer
                  Integer
                  (Vector (Integer Integer Integer)))
                Integer))
             Integer))
         (sum_eight
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq (GlobalArg (Label g)) (Reg Rcx))
             (Leaq
               (GlobalArg (Label sum_eight))
               (Reg Rdx))
             (Movq (Reg Rdx) (Reg Rdi))
             (IndirectCallq (Reg Rcx) 1)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Imm 6) (Reg Rax))
             (Addq (Reg Rcx) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label sum_eight)
     (Finfo3
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 6)
      (locals
        ((a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         ($tmp.10 Integer)
         ($tmp.11 Integer)
         ($tmp.12 Integer)
         ($tmp.4 Integer)
         ($tmp.5 Integer)
         ($tmp.6 Integer)
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         (a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)))
      (body
        (((Label sum_eight_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Reg Rdi))
             (Movq (Reg Rsi) (Reg Rsi))
             (Movq (Reg Rdx) (Reg Rdx))
             (Movq (Reg Rcx) (Reg Rcx))
             (Movq (Reg R8) (Reg R8))
             (Movq (Reg R9) (Reg R9))
             (Movq (Reg Rdi) (Reg Rdi))
             (Addq (Reg Rsi) (Reg Rdi))
             (Movq (Reg Rdx) (Reg Rdx))
             (Addq (Reg Rcx) (Reg Rdx))
             (Movq (Reg Rdi) (Reg Rcx))
             (Addq (Reg Rdx) (Reg Rcx))
             (Movq (Reg R9) (Reg R11))
             (Movq (Deref R11 8) (Reg Rdx))
             (Movq (Reg R8) (Reg Rsi))
             (Addq (Reg Rdx) (Reg Rsi))
             (Movq (Reg R9) (Reg R11))
             (Movq (Deref R11 16) (Reg Rdx))
             (Movq (Reg R9) (Reg R11))
             (Movq (Deref R11 24) (Reg Rdi))
             (Movq (Reg Rdx) (Reg Rdx))
             (Addq (Reg Rdi) (Reg Rdx))
             (Movq (Reg Rsi) (Reg Rsi))
             (Addq (Reg Rdx) (Reg Rsi))
             (Movq (Reg Rcx) (Reg Rax))
             (Addq (Reg Rsi) (Reg Rax))
             (Jmp (Label sum_eight_conclusion)))))))))
   (Def
     (Label g)
     (Finfo3
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee (Rbx)))
     ((nparams 1)
      (locals
        ((f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         ($ea.1
           (Vector (Integer Integer Integer)))
         ($tmp.13 Integer)
         ($tmp.14 Integer)
         ($tmp.15 Integer)
         (_.1 Unit)
         (_.2 Unit)
         (_.3 Unit)
         (_.4 Unit)
         (f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 32)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 7) (Deref R11 0))
             (Movq (Reg R11) (Reg R9))
             (Movq (Reg R9) (Reg R11))
             (Movq (Imm 6) (Deref R11 8))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Reg R9) (Reg R11))
             (Movq (Imm 7) (Deref R11 16))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Reg R9) (Reg R11))
             (Movq (Imm 8) (Deref R11 24))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Imm 1) (Reg Rdi))
             (Movq (Imm 2) (Reg Rsi))
             (Movq (Imm 3) (Reg Rdx))
             (Movq (Imm 4) (Reg Rcx))
             (Movq (Imm 5) (Reg R8))
             (Movq (Reg R9) (Reg R9))
             (TailJmp (Reg Rbx) 6))))
         ((Label block_2)
          (Block
            Binfo1
            ((Movq (Imm 0) (Reg Rcx))
             (Jmp (Label block_1)))))
         ((Label block_3)
          (Block
            Binfo1
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 32) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_1)))))
         ((Label g_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Reg Rbx))
             (Movq
               (GlobalArg (Label free_ptr))
               (Reg Rdx))
             (Movq (Reg Rdx) (Reg Rdx))
             (Addq (Imm 32) (Reg Rdx))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Reg Rsi))
             (Cmpq (Reg Rsi) (Reg Rdx))
             (JmpIf CC_l (Label block_2))
             (Jmp (Label block_3)))))))))))
