(X86Program
  ((Label main_start)
   (Leaq
     (GlobalArg Rip (Label twice))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Leaq
     (GlobalArg Rip (Label add1))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Callq (Label read_int))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Deref Rbp -8) (Reg Rdi))
   (Movq (Reg Rcx) (Reg Rsi))
   (Movq (Deref Rbp -16) (Reg Rax))
   (Addq (Imm 16) (Reg Rsp))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 16) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Addq (Imm 16) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq
   (Label add1_start)
   (Movq (Reg Rdi) (Reg Rcx))
   (Movq (Imm 1) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label add1_conclusion))
   (Global (Label add1))
   (Align 8)
   (Label add1)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Jmp (Label add1_start))
   (Label add1_conclusion)
   (Popq (Reg Rbp))
   Retq
   (Label twice_start)
   (Movq (Reg Rdi) (Deref Rbp -16))
   (Movq (Reg Rsi) (Deref Rbp -24))
   (Movq (Deref Rbp -24) (Reg Rdi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Deref Rbp -24) (Reg Rdi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Deref Rbp -8) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label twice_conclusion))
   (Global (Label twice))
   (Align 8)
   (Label twice)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 32) (Reg Rsp))
   (Jmp (Label twice_start))
   (Label twice_conclusion)
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq))
