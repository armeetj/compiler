(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1
           (Function
             ()
             (Function (Integer) Integer)))
         ($tmp.2 (Function (Integer) Integer))
         (give_me_add1
           (Function
             ()
             (Function (Integer) Integer)))))
      (body
        (((Label main_start)
          (Block
            (Binfo2
              ((initial ())
               (afters
                 (((VarL $tmp.1))
                  ((RegL Rax))
                  ((VarL $tmp.2))
                  ((VarL $tmp.2) (RegL Rdi))
                  ()))))
            ((Leaq
               (GlobalArg (Label give_me_add1))
               (Var $tmp.1))
             (IndirectCallq (Var $tmp.1) 0)
             (Movq (Reg Rax) (Var $tmp.2))
             (Movq (Imm 41) (Reg Rdi))
             (TailJmp (Var $tmp.2) 1))))))))
   (Def
     (Label add1)
     Finfo1
     ((nparams 1)
      (locals ((x.1 Integer) (x.1 Integer)))
      (body
        (((Label add1_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp) (RegL Rdi)))
               (afters
                 (((VarL x.1) (RegL Rsp))
                  ((RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Movq (Reg Rdi) (Var x.1))
             (Movq (Var x.1) (Reg Rax))
             (Addq (Imm 1) (Reg Rax))
             (Jmp (Label add1_conclusion)))))))))
   (Def
     (Label give_me_add1)
     Finfo1
     ((nparams 0)
      (locals
        ((add1 (Function (Integer) Integer))))
      (body
        (((Label give_me_add1_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Leaq
               (GlobalArg (Label add1))
               (Reg Rax))
             (Jmp (Label give_me_add1_conclusion)))))))))))
