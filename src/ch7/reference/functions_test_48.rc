(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $tmp.1
          (FunRef (Label f) 2)
          (Apply (Var $tmp.1) ((Int 11) (Int 10)))))))
   (Def
     (Label add)
     ((args ((x.1 Integer) (y.1 Integer)))
      (ret (Vector (Integer)))
      (body
        (Let
          $ea.1
          (Prim Add ((Var x.1) (Var y.1)))
          (Let
            _.2
            (If
              (Let
                $tmp.2
                (GlobalVal free_ptr)
                (Let
                  $tmp.3
                  (Prim Add ((Var $tmp.2) (Int 16)))
                  (Let
                    $tmp.4
                    (GlobalVal fromspace_end)
                    (Prim Lt ((Var $tmp.3) (Var $tmp.4))))))
              (Atm Void)
              (Collect 16))
            (Let
              $ea.2
              (Allocate 1 (Vector (Integer)))
              (Let
                _.1
                (VecSet (Var $ea.2) 0 (Var $ea.1))
                (Atm (Var $ea.2)))))))))
   (Def
     (Label f)
     ((args ((x.2 Integer) (y.2 Integer)))
      (ret Integer)
      (body
        (Let
          v.1
          (Let
            _.5
            (If
              (Let
                $tmp.5
                (GlobalVal free_ptr)
                (Let
                  $tmp.6
                  (Prim Add ((Var $tmp.5) (Int 24)))
                  (Let
                    $tmp.7
                    (GlobalVal fromspace_end)
                    (Prim Lt ((Var $tmp.6) (Var $tmp.7))))))
              (Atm Void)
              (Collect 24))
            (Let
              $ea.3
              (Allocate 2 (Vector (Integer Integer)))
              (Let
                _.4
                (VecSet (Var $ea.3) 0 (Var x.2))
                (Let
                  _.3
                  (VecSet (Var $ea.3) 1 (Var y.2))
                  (Atm (Var $ea.3))))))
          (Let
            z.1
            (Let
              $tmp.8
              (FunRef (Label add) 2)
              (Apply
                (Var $tmp.8)
                ((Var x.2) (Var y.2))))
            (Let
              $tmp.9
              (VecRef (Var v.1) 0)
              (Let
                $tmp.10
                (VecRef (Var v.1) 1)
                (Let
                  $tmp.11
                  (Prim Add ((Var $tmp.9) (Var $tmp.10)))
                  (Let
                    $tmp.12
                    (VecRef (Var z.1) 0)
                    (Prim Add ((Var $tmp.11) (Var $tmp.12))))))))))))))
