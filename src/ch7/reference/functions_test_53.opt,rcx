(X86Program
  ((Label main_start)
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Callq (Label read_int))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Callq (Label read_int))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Deref Rbp -8) (Reg Rdi))
   (Movq (Reg Rcx) (Reg Rsi))
   (IndirectCallq (Deref Rbp -16))
   (Movq (Reg Rax) (Reg Rcx))
   (Addq (Imm 41) (Reg Rax))
   (Jmp (Label main_conclusion))
   (Global (Label main))
   (Align 8)
   (Label main)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 16) (Reg Rsp))
   (Movq (Imm 65536) (Reg Rdi))
   (Movq (Imm 65536) (Reg Rsi))
   (Callq (Label initialize))
   (Movq
     (GlobalArg Rip (Label rootstack_begin))
     (Reg R15))
   (Jmp (Label main_start))
   (Label main_conclusion)
   (Addq (Imm 16) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq
   (Label ack_start)
   (Movq (Reg Rdi) (Deref Rbp -32))
   (Movq (Reg Rsi) (Reg Rcx))
   (Cmpq (Imm 0) (Deref Rbp -32))
   (JmpIf CC_e (Label block_3))
   (Jmp (Label block_4))
   (Label block_1)
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Deref Rbp -32) (Reg Rcx))
   (Subq (Imm 1) (Reg Rcx))
   (Movq (Reg Rcx) (Reg Rdi))
   (Movq (Imm 1) (Reg Rsi))
   (Movq (Deref Rbp -8) (Reg Rax))
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label block_2)
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -8))
   (Movq (Deref Rbp -32) (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -16))
   (Subq (Imm 1) (Deref Rbp -16))
   (Leaq
     (GlobalArg Rip (Label ack))
     (Reg Rax))
   (Movq (Reg Rax) (Deref Rbp -24))
   (Subq (Imm 1) (Reg Rcx))
   (Movq (Deref Rbp -32) (Reg Rdi))
   (Movq (Reg Rcx) (Reg Rsi))
   (IndirectCallq (Deref Rbp -24))
   (Movq (Reg Rax) (Reg Rcx))
   (Movq (Deref Rbp -16) (Reg Rdi))
   (Movq (Reg Rcx) (Reg Rsi))
   (Movq (Deref Rbp -8) (Reg Rax))
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   (TailJmp (Reg Rax))
   (Label block_3)
   (Movq (Imm 1) (Reg Rax))
   (Addq (Reg Rcx) (Reg Rax))
   (Jmp (Label ack_conclusion))
   (Label block_4)
   (Cmpq (Imm 0) (Reg Rcx))
   (JmpIf CC_e (Label block_1))
   (Jmp (Label block_2))
   (Global (Label ack))
   (Align 8)
   (Label ack)
   (Pushq (Reg Rbp))
   (Movq (Reg Rsp) (Reg Rbp))
   (Subq (Imm 32) (Reg Rsp))
   (Jmp (Label ack_start))
   (Label ack_conclusion)
   (Addq (Imm 32) (Reg Rsp))
   (Popq (Reg Rbp))
   Retq))
