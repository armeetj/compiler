(X86Program
  ((Def
     (Label main)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         (sum (Function (Integer) Integer))))
      (body
        (((Label block_1)
          (Block
            ((Movq (Imm 42) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label block_2)
          (Block
            ((Movq (Imm 777) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label main_start)
          (Block
            ((Leaq (GlobalArg (Label sum)) (Reg Rcx))
             (Movq (Imm 3) (Reg Rdi))
             (IndirectCallq (Reg Rcx) 1)
             (Movq (Reg Rax) (Reg Rcx))
             (Cmpq (Imm 6) (Reg Rcx))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))
   (Def
     (Label sum)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 2)
       (used_callee (Rbx R12)))
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($ea.1 (Vector (Integer)))
         ($ea.2 (Vector (Integer)))
         ($ea.3 Integer)
         ($ea.4 (Vector (Integer)))
         ($tmp.10 Integer)
         ($tmp.11 Integer)
         ($tmp.12 Integer)
         ($tmp.13 Integer)
         ($tmp.14 Integer)
         ($tmp.15 (Function (Integer) Integer))
         ($tmp.16 Integer)
         ($tmp.3 Integer)
         ($tmp.4 Integer)
         ($tmp.5 Integer)
         ($tmp.6 Integer)
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 Integer)
         (_.1 Unit)
         (_.2 Unit)
         (_.3 Unit)
         (_.4 Unit)
         (_.5 Unit)
         (_.6 Unit)
         (neg-one.1 (Vector (Integer)))
         (one.1 (Vector (Integer)))
         (sum (Function (Integer) Integer))
         (x-vec.1 (Vector (Integer)))
         (x.1 Integer)))
      (body
        (((Label block_10)
          (Block
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 16) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_8)))))
         ((Label block_11)
          (Block
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 16)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 3) (Deref R11 0))
             (Movq (Reg R11) (Reg Rdx))
             (Movq (Reg Rdx) (Reg R11))
             (Movq (Reg R12) (Deref R11 8))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Reg Rdx) (Deref R15 -16))
             (Movq
               (GlobalArg (Label free_ptr))
               (Reg Rcx))
             (Addq (Imm 16) (Reg Rcx))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Reg Rdx))
             (Cmpq (Reg Rdx) (Reg Rcx))
             (JmpIf CC_l (Label block_9))
             (Jmp (Label block_10)))))
         ((Label block_12)
          (Block
            ((Movq (Imm 0) (Reg Rcx))
             (Jmp (Label block_11)))))
         ((Label block_13)
          (Block
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 16) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_11)))))
         ((Label block_3)
          (Block
            ((Movq (Deref R15 -8) (Reg R11))
             (Movq (Deref R11 8) (Reg Rax))
             (Jmp (Label sum_conclusion)))))
         ((Label block_4)
          (Block
            ((Leaq (GlobalArg (Label sum)) (Reg Rsi))
             (Movq (Reg Rdx) (Reg R11))
             (Movq (Deref R11 8) (Reg Rcx))
             (Movq (Reg R12) (Reg Rdx))
             (Addq (Reg Rcx) (Reg Rdx))
             (Movq (Reg Rdx) (Reg Rdi))
             (IndirectCallq (Reg Rsi) 1)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Reg R12) (Reg Rax))
             (Addq (Reg Rcx) (Reg Rax))
             (Jmp (Label sum_conclusion)))))
         ((Label block_5)
          (Block
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 16)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 3) (Deref R11 0))
             (Movq (Reg R11) (Reg Rdx))
             (Movq (Reg Rdx) (Reg R11))
             (Movq (Reg Rbx) (Deref R11 8))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Deref R15 -16) (Reg R11))
             (Movq (Deref R11 8) (Reg Rcx))
             (Cmpq (Imm 1) (Reg Rcx))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))
         ((Label block_6)
          (Block
            ((Movq (Imm 0) (Reg Rcx))
             (Jmp (Label block_5)))))
         ((Label block_7)
          (Block
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 16) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_5)))))
         ((Label block_8)
          (Block
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 16)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 3) (Deref R11 0))
             (Movq (Reg R11) (Reg Rdx))
             (Movq (Reg Rdx) (Reg R11))
             (Movq (Imm 1) (Deref R11 8))
             (Movq (Imm 0) (Reg Rcx))
             (Movq (Reg Rdx) (Deref R15 -8))
             (Movq (Imm 1) (Reg Rbx))
             (Negq (Reg Rbx))
             (Movq
               (GlobalArg (Label free_ptr))
               (Reg Rcx))
             (Addq (Imm 16) (Reg Rcx))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Reg Rdx))
             (Cmpq (Reg Rdx) (Reg Rcx))
             (JmpIf CC_l (Label block_6))
             (Jmp (Label block_7)))))
         ((Label block_9)
          (Block
            ((Movq (Imm 0) (Reg Rcx))
             (Jmp (Label block_8)))))
         ((Label sum_start)
          (Block
            ((Movq (Reg Rdi) (Reg R12))
             (Movq
               (GlobalArg (Label free_ptr))
               (Reg Rcx))
             (Addq (Imm 16) (Reg Rcx))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Reg Rdx))
             (Cmpq (Reg Rdx) (Reg Rcx))
             (JmpIf CC_l (Label block_12))
             (Jmp (Label block_13)))))))))))
