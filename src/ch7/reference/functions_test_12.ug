(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Apply
          (FunRef (Label f) 2)
          ((Int 0)
           (Let
             $ea.2
             (FunRef (Label id) 1)
             (Let
               $ea.3
               (Let
                 _.2
                 (If
                   (Prim
                     Lt
                     ((Prim
                        Add
                        ((GlobalVal free_ptr) (Int 16)))
                      (GlobalVal fromspace_end)))
                   Void
                   (Collect 16))
                 (Let
                   $ea.1
                   (Allocate 1 (Vector (Integer)))
                   (Let
                     _.1
                     (VecSet (Var $ea.1) 0 (Int 42))
                     (Var $ea.1))))
               (Let
                 _.5
                 (If
                   (Prim
                     Lt
                     ((Prim
                        Add
                        ((GlobalVal free_ptr) (Int 24)))
                      (GlobalVal fromspace_end)))
                   Void
                   (Collect 24))
                 (Let
                   $ea.4
                   (Allocate
                     2
                     (Vector
                       ((Function (Integer) Integer)
                        (Vector (Integer)))))
                   (Let
                     _.4
                     (VecSet (Var $ea.4) 0 (Var $ea.2))
                     (Let
                       _.3
                       (VecSet (Var $ea.4) 1 (Var $ea.3))
                       (Var $ea.4))))))))))))
   (Def
     (Label id)
     ((args ((x.1 Integer)))
      (ret Integer)
      (body (Var x.1))))
   (Def
     (Label f)
     ((args
        ((n.1 Integer)
         (clos.1
           (Vector
             ((Function (Integer) Integer)
              (Vector (Integer)))))))
      (ret Integer)
      (body
        (If
          (Prim Eq ((Var n.1) (Int 100)))
          (Apply
            (VecRef (Var clos.1) 0)
            ((VecRef (VecRef (Var clos.1) 1) 0)))
          (Apply
            (FunRef (Label f) 2)
            ((Prim Add ((Var n.1) (Int 1)))
             (Let
               $ea.5
               (VecRef (Var clos.1) 0)
               (Let
                 $ea.6
                 (VecRef (Var clos.1) 1)
                 (Let
                   _.8
                   (If
                     (Prim
                       Lt
                       ((Prim
                          Add
                          ((GlobalVal free_ptr) (Int 24)))
                        (GlobalVal fromspace_end)))
                     Void
                     (Collect 24))
                   (Let
                     $ea.7
                     (Allocate
                       2
                       (Vector
                         ((Function (Integer) Integer)
                          (Vector (Integer)))))
                     (Let
                       _.7
                       (VecSet (Var $ea.7) 0 (Var $ea.5))
                       (Let
                         _.6
                         (VecSet (Var $ea.7) 1 (Var $ea.6))
                         (Var $ea.7)))))))))))))))
