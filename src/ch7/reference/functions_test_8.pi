(X86Program
  ((Def
     (Label main)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Boolean))
         (apply_1 Boolean)
         (even (Function (Integer) Boolean))))
      (body
        (((Label block_1)
          (Block
            ((Movq (Imm 42) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label block_2)
          (Block
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label main_start)
          (Block
            ((Leaq
               (GlobalArg (Label even))
               (Reg Rcx))
             (Movq (Imm 2) (Reg Rdi))
             (IndirectCallq (Reg Rcx) 1)
             (Movq (Reg Rax) (Reg Rcx))
             (Cmpq (Imm 1) (Reg Rcx))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))
   (Def
     (Label even)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4 (Function (Integer) Boolean))
         (odd (Function (Integer) Boolean))
         (x.1 Integer)))
      (body
        (((Label block_3)
          (Block
            ((Movq (Imm 1) (Reg Rax))
             (Jmp (Label even_conclusion)))))
         ((Label block_4)
          (Block
            ((Leaq (GlobalArg (Label odd)) (Reg Rdx))
             (Movq (Imm 1) (Reg Rsi))
             (Negq (Reg Rsi))
             (Addq (Reg Rsi) (Reg Rcx))
             (Movq (Reg Rcx) (Reg Rdi))
             (Movq (Reg Rdx) (Reg Rax))
             (TailJmp (Reg Rax) 1))))
         ((Label even_start)
          (Block
            ((Movq (Reg Rdi) (Reg Rcx))
             (Cmpq (Imm 0) (Reg Rcx))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))
   (Def
     (Label odd)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 1)
      (locals
        ((x.2 Integer)
         ($tmp.5 Integer)
         ($tmp.6 Integer)
         ($tmp.7 (Function (Integer) Boolean))
         (even (Function (Integer) Boolean))
         (x.2 Integer)))
      (body
        (((Label block_5)
          (Block
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label odd_conclusion)))))
         ((Label block_6)
          (Block
            ((Leaq
               (GlobalArg (Label even))
               (Reg Rdx))
             (Movq (Imm 1) (Reg Rsi))
             (Negq (Reg Rsi))
             (Addq (Reg Rsi) (Reg Rcx))
             (Movq (Reg Rcx) (Reg Rdi))
             (Movq (Reg Rdx) (Reg Rax))
             (TailJmp (Reg Rax) 1))))
         ((Label odd_start)
          (Block
            ((Movq (Reg Rdi) (Reg Rcx))
             (Cmpq (Imm 0) (Reg Rcx))
             (JmpIf CC_e (Label block_5))
             (Jmp (Label block_6)))))))))))
