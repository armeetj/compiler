(X86Program
  ((Def
     (Label main)
     (Finfo2
       (conflicts
         (((VarL $tmp.1)
           ((VarL $tmp.2) (RegL Rsp)))
          ((VarL $tmp.2)
           ((VarL $tmp.1) (RegL Rsp) (RegL Rdi)))
          ((VarL $tmp.3) ((RegL Rsp) (RegL Rax)))
          ((VarL g) ((RegL Rsp)))
          ((VarL sum_eight) ((RegL Rsp)))
          ((RegL Rsp)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (VarL g)
            (VarL sum_eight)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rax)
           ((VarL $tmp.3)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx) ((RegL Rsp) (RegL Rax)))
          ((RegL Rdx) ((RegL Rsp) (RegL Rax)))
          ((RegL Rsi) ((RegL Rsp) (RegL Rax)))
          ((RegL Rdi)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax)))
          ((RegL R8) ((RegL Rsp) (RegL Rax)))
          ((RegL R9) ((RegL Rsp) (RegL Rax)))
          ((RegL R10) ((RegL Rsp) (RegL Rax)))
          ((RegL R11) ((RegL Rsp) (RegL Rax))))))
     ((nparams 0)
      (locals
        (($tmp.1
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         ($tmp.2
           (Function
             ((Function
                (Integer
                  Integer
                  Integer
                  Integer
                  Integer
                  (Vector (Integer Integer Integer)))
                Integer))
             Integer))
         ($tmp.3 Integer)
         (g
           (Function
             ((Function
                (Integer
                  Integer
                  Integer
                  Integer
                  Integer
                  (Vector (Integer Integer Integer)))
                Integer))
             Integer))
         (sum_eight
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label g))
               (Var $tmp.2))
             (Leaq
               (GlobalArg (Label sum_eight))
               (Var $tmp.1))
             (Movq (Var $tmp.1) (Reg Rdi))
             (IndirectCallq (Var $tmp.2) 1)
             (Movq (Reg Rax) (Var $tmp.3))
             (Movq (Imm 6) (Reg Rax))
             (Addq (Var $tmp.3) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label sum_eight)
     (Finfo2
       (conflicts
         (((VarL $tmp.10)
           ((VarL $tmp.11)
            (VarL $tmp.6)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (RegL Rsp)))
          ((VarL $tmp.11)
           ((VarL $tmp.10)
            (VarL $tmp.12)
            (VarL $tmp.6)
            (VarL $tmp.8)
            (RegL Rsp)))
          ((VarL $tmp.12)
           ((VarL $tmp.11)
            (VarL $tmp.6)
            (RegL Rsp)
            (RegL Rax)))
          ((VarL $tmp.4)
           ((VarL $tmp.5)
            (VarL $tup.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rsp)))
          ((VarL $tmp.5)
           ((VarL $tmp.4)
            (VarL $tmp.6)
            (VarL $tup.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rsp)))
          ((VarL $tmp.6)
           ((VarL $tmp.10)
            (VarL $tmp.11)
            (VarL $tmp.12)
            (VarL $tmp.5)
            (VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL $tup.1)
            (VarL e.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tmp.7)
           ((VarL $tmp.6)
            (VarL $tmp.8)
            (VarL $tup.1)
            (VarL e.1)
            (RegL Rsp)))
          ((VarL $tmp.8)
           ((VarL $tmp.10)
            (VarL $tmp.11)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tmp.9)
            (VarL $tup.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tmp.9)
           ((VarL $tmp.10)
            (VarL $tmp.6)
            (VarL $tmp.8)
            (VarL $tup.1)
            (RegL Rsp)
            (RegL R11)))
          ((VarL $tup.1)
           ((VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL a.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rsp)))
          ((VarL a.1)
           ((VarL $tup.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL R8)
            (RegL R9)))
          ((VarL b.1)
           ((VarL $tmp.4)
            (VarL $tup.1)
            (VarL a.1)
            (VarL c.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL R8)
            (RegL R9)))
          ((VarL c.1)
           ((VarL $tmp.4)
            (VarL $tup.1)
            (VarL a.1)
            (VarL b.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rsp)
            (RegL Rcx)
            (RegL R8)
            (RegL R9)))
          ((VarL d.1)
           ((VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tup.1)
            (VarL a.1)
            (VarL b.1)
            (VarL c.1)
            (VarL e.1)
            (RegL Rsp)
            (RegL R8)
            (RegL R9)))
          ((VarL e.1)
           ((VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tup.1)
            (VarL a.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)
            (RegL Rsp)
            (RegL R9)
            (RegL R11)))
          ((RegL Rsp)
           ((VarL $tmp.10)
            (VarL $tmp.11)
            (VarL $tmp.12)
            (VarL $tmp.4)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL $tup.1)
            (VarL a.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)
            (VarL e.1)
            (RegL Rax)
            (RegL R11)))
          ((RegL Rax) ((VarL $tmp.12) (RegL Rsp)))
          ((RegL Rcx)
           ((VarL a.1) (VarL b.1) (VarL c.1)))
          ((RegL Rdx) ((VarL a.1) (VarL b.1)))
          ((RegL Rsi) ((VarL a.1)))
          ((RegL R8)
           ((VarL a.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)))
          ((RegL R9)
           ((VarL a.1)
            (VarL b.1)
            (VarL c.1)
            (VarL d.1)
            (VarL e.1)))
          ((RegL R11)
           ((VarL $tmp.6)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL e.1)
            (RegL Rsp))))))
     ((nparams 6)
      (locals
        ((a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         ($tmp.10 Integer)
         ($tmp.11 Integer)
         ($tmp.12 Integer)
         ($tmp.4 Integer)
         ($tmp.5 Integer)
         ($tmp.6 Integer)
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))
         (a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)))
      (body
        (((Label sum_eight_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var a.1))
             (Movq (Reg Rsi) (Var b.1))
             (Movq (Reg Rdx) (Var c.1))
             (Movq (Reg Rcx) (Var d.1))
             (Movq (Reg R8) (Var e.1))
             (Movq (Reg R9) (Var $tup.1))
             (Movq (Var a.1) (Var $tmp.4))
             (Addq (Var b.1) (Var $tmp.4))
             (Movq (Var c.1) (Var $tmp.5))
             (Addq (Var d.1) (Var $tmp.5))
             (Movq (Var $tmp.4) (Var $tmp.6))
             (Addq (Var $tmp.5) (Var $tmp.6))
             (Movq (Var $tup.1) (Reg R11))
             (Movq (Deref R11 8) (Var $tmp.7))
             (Movq (Var e.1) (Var $tmp.8))
             (Addq (Var $tmp.7) (Var $tmp.8))
             (Movq (Var $tup.1) (Reg R11))
             (Movq (Deref R11 16) (Var $tmp.9))
             (Movq (Var $tup.1) (Reg R11))
             (Movq (Deref R11 24) (Var $tmp.10))
             (Movq (Var $tmp.9) (Var $tmp.11))
             (Addq (Var $tmp.10) (Var $tmp.11))
             (Movq (Var $tmp.8) (Var $tmp.12))
             (Addq (Var $tmp.11) (Var $tmp.12))
             (Movq (Var $tmp.6) (Reg Rax))
             (Addq (Var $tmp.12) (Reg Rax))
             (Jmp (Label sum_eight_conclusion)))))))))
   (Def
     (Label g)
     (Finfo2
       (conflicts
         (((VarL $ea.1)
           ((VarL _.1)
            (VarL _.2)
            (VarL _.3)
            (VarL f.2)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R11)))
          ((VarL $tmp.13) ((VarL f.2) (RegL R15)))
          ((VarL $tmp.14)
           ((VarL $tmp.15) (VarL f.2) (RegL R15)))
          ((VarL $tmp.15)
           ((VarL $tmp.14) (VarL f.2) (RegL R15)))
          ((VarL _.1) ((VarL $ea.1) (VarL f.2)))
          ((VarL _.2) ((VarL $ea.1) (VarL f.2)))
          ((VarL _.3) ((VarL $ea.1) (VarL f.2)))
          ((VarL _.4) ((VarL f.2)))
          ((VarL f.2)
           ((VarL $ea.1)
            (VarL $tmp.13)
            (VarL $tmp.14)
            (VarL $tmp.15)
            (VarL _.1)
            (VarL _.2)
            (VarL _.3)
            (VarL _.4)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL R15)
            (RegL Rflags)))
          ((RegL Rax) ((VarL f.2)))
          ((RegL Rcx)
           ((VarL $ea.1)
            (VarL f.2)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)))
          ((RegL Rdx)
           ((VarL $ea.1)
            (VarL f.2)
            (RegL Rcx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)))
          ((RegL Rsi)
           ((VarL $ea.1)
            (VarL f.2)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)))
          ((RegL Rdi)
           ((VarL $ea.1)
            (VarL f.2)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL R8)
            (RegL R9)))
          ((RegL R8)
           ((VarL $ea.1)
            (VarL f.2)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R9)))
          ((RegL R9)
           ((VarL f.2)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)))
          ((RegL R10) ((VarL f.2)))
          ((RegL R11) ((VarL $ea.1) (VarL f.2)))
          ((RegL R15)
           ((VarL $tmp.13)
            (VarL $tmp.14)
            (VarL $tmp.15)
            (VarL f.2)
            (RegL Rflags)))
          ((RegL Rflags) ((VarL f.2) (RegL R15))))))
     ((nparams 1)
      (locals
        ((f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))
         ($ea.1
           (Vector (Integer Integer Integer)))
         ($tmp.13 Integer)
         ($tmp.14 Integer)
         ($tmp.15 Integer)
         (_.1 Unit)
         (_.2 Unit)
         (_.3 Unit)
         (_.4 Unit)
         (f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq
               (GlobalArg (Label free_ptr))
               (Reg R11))
             (Addq
               (Imm 32)
               (GlobalArg (Label free_ptr)))
             (Movq (Imm 7) (Deref R11 0))
             (Movq (Reg R11) (Var $ea.1))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 6) (Deref R11 8))
             (Movq (Imm 0) (Var _.3))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 7) (Deref R11 16))
             (Movq (Imm 0) (Var _.2))
             (Movq (Var $ea.1) (Reg R11))
             (Movq (Imm 8) (Deref R11 24))
             (Movq (Imm 0) (Var _.1))
             (Movq (Imm 1) (Reg Rdi))
             (Movq (Imm 2) (Reg Rsi))
             (Movq (Imm 3) (Reg Rdx))
             (Movq (Imm 4) (Reg Rcx))
             (Movq (Imm 5) (Reg R8))
             (Movq (Var $ea.1) (Reg R9))
             (TailJmp (Var f.2) 6))))
         ((Label block_2)
          (Block
            Binfo1
            ((Movq (Imm 0) (Var _.4))
             (Jmp (Label block_1)))))
         ((Label block_3)
          (Block
            Binfo1
            ((Movq (Reg R15) (Reg Rdi))
             (Movq (Imm 32) (Reg Rsi))
             (Callq (Label collect) 2)
             (Jmp (Label block_1)))))
         ((Label g_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var f.2))
             (Movq
               (GlobalArg (Label free_ptr))
               (Var $tmp.13))
             (Movq (Var $tmp.13) (Var $tmp.14))
             (Addq (Imm 32) (Var $tmp.14))
             (Movq
               (GlobalArg (Label fromspace_end))
               (Var $tmp.15))
             (Cmpq (Var $tmp.15) (Var $tmp.14))
             (JmpIf CC_l (Label block_2))
             (Jmp (Label block_3)))))))))))
