(X86Program
  ((Def
     (Label main)
     (Finfo
       (num_spilled 6)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.10 Integer)
         ($tmp.11 (Function (Integer) Integer))
         ($tmp.12 Integer)
         ($tmp.13 Integer)
         ($tmp.14 Integer)
         ($tmp.15 Integer)
         ($tmp.16 Integer)
         ($tmp.2 Integer)
         ($tmp.3 (Function (Integer) Integer))
         ($tmp.4 Integer)
         ($tmp.5 (Function (Integer) Integer))
         ($tmp.6 Integer)
         ($tmp.7 (Function (Integer) Integer))
         ($tmp.8 Integer)
         ($tmp.9 (Function (Integer) Integer))
         (factorial (Function (Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            ((Leaq
               (GlobalArg (Label factorial))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Imm 0) (Reg Rdi))
             (IndirectCallq (Deref Rbp -8) 1)
             (Movq (Reg Rax) (Deref Rbp -24))
             (Leaq
               (GlobalArg (Label factorial))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Imm 1) (Reg Rdi))
             (IndirectCallq (Deref Rbp -8) 1)
             (Movq (Reg Rax) (Deref Rbp -32))
             (Leaq
               (GlobalArg (Label factorial))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Imm 2) (Reg Rdi))
             (IndirectCallq (Deref Rbp -8) 1)
             (Movq (Reg Rax) (Deref Rbp -40))
             (Leaq
               (GlobalArg (Label factorial))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Imm 3) (Reg Rdi))
             (IndirectCallq (Deref Rbp -8) 1)
             (Movq (Reg Rax) (Deref Rbp -48))
             (Leaq
               (GlobalArg (Label factorial))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Movq (Imm 4) (Reg Rdi))
             (IndirectCallq (Deref Rbp -8) 1)
             (Movq (Reg Rax) (Deref Rbp -8))
             (Leaq
               (GlobalArg (Label factorial))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -16))
             (Movq (Imm 5) (Reg Rdi))
             (IndirectCallq (Deref Rbp -16) 1)
             (Movq (Reg Rax) (Reg Rcx))
             (Addq (Reg Rcx) (Deref Rbp -8))
             (Movq (Deref Rbp -48) (Reg Rcx))
             (Addq (Deref Rbp -8) (Reg Rcx))
             (Movq (Deref Rbp -40) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Addq (Reg Rcx) (Deref Rbp -8))
             (Movq (Deref Rbp -32) (Reg Rcx))
             (Addq (Deref Rbp -8) (Reg Rcx))
             (Movq (Deref Rbp -24) (Reg Rax))
             (Addq (Reg Rcx) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label mult)
     (Finfo
       (num_spilled 3)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 2)
      (locals
        ((x.1 Integer)
         (y.1 Integer)
         ($tmp.17 Integer)
         ($tmp.18 Integer)
         ($tmp.19
           (Function (Integer Integer) Integer))
         ($tmp.20 Integer)
         (mult
           (Function (Integer Integer) Integer))
         (x.1 Integer)
         (y.1 Integer)))
      (body
        (((Label block_1)
          (Block
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label block_2)
          (Block
            ((Leaq
               (GlobalArg (Label mult))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -16))
             (Movq (Imm 1) (Deref Rbp -8))
             (Negq (Deref Rbp -8))
             (Addq (Reg Rcx) (Deref Rbp -8))
             (Movq (Deref Rbp -8) (Reg Rdi))
             (Movq (Deref Rbp -24) (Reg Rsi))
             (IndirectCallq (Deref Rbp -16) 2)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Deref Rbp -24) (Reg Rax))
             (Addq (Reg Rcx) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label mult_start)
          (Block
            ((Movq (Reg Rdi) (Reg Rcx))
             (Movq (Reg Rsi) (Deref Rbp -24))
             (Movq (Imm 0) (Reg Rax))
             (Cmpq (Reg Rcx) (Reg Rax))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))
   (Def
     (Label factorial)
     (Finfo
       (num_spilled 3)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 1)
      (locals
        ((n.1 Integer)
         ($tmp.21 Integer)
         ($tmp.22 (Function (Integer) Integer))
         ($tmp.23 Integer)
         ($tmp.24
           (Function (Integer Integer) Integer))
         (factorial (Function (Integer) Integer))
         (mult
           (Function (Integer Integer) Integer))
         (n.1 Integer)))
      (body
        (((Label block_3)
          (Block
            ((Movq (Imm 1) (Reg Rax))
             (Jmp (Label factorial_conclusion)))))
         ((Label block_4)
          (Block
            ((Leaq
               (GlobalArg (Label mult))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -16))
             (Leaq
               (GlobalArg (Label factorial))
               (Reg Rcx))
             (Movq (Deref Rbp -24) (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -8))
             (Subq (Imm 1) (Deref Rbp -8))
             (Movq (Deref Rbp -8) (Reg Rdi))
             (IndirectCallq (Reg Rcx) 1)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Deref Rbp -24) (Reg Rdi))
             (Movq (Reg Rcx) (Reg Rsi))
             (Movq (Deref Rbp -16) (Reg Rax))
             (TailJmp (Reg Rax) 2))))
         ((Label factorial_start)
          (Block
            ((Movq (Reg Rdi) (Deref Rbp -24))
             (Cmpq (Imm 0) (Deref Rbp -24))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))))
