(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1
           (Function (Integer Integer) Integer))
         (mult
           (Function (Integer Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            (Binfo2
              ((initial ())
               (afters
                 (((VarL $tmp.1))
                  ((VarL $tmp.1) (RegL Rdi))
                  ((VarL $tmp.1) (RegL Rsi) (RegL Rdi))
                  ()))))
            ((Leaq
               (GlobalArg (Label mult))
               (Var $tmp.1))
             (Movq (Imm 6) (Reg Rdi))
             (Movq (Imm 7) (Reg Rsi))
             (TailJmp (Var $tmp.1) 2))))))))
   (Def
     (Label mult)
     Finfo1
     ((nparams 2)
      (locals
        ((x.1 Integer)
         (y.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4
           (Function (Integer Integer) Integer))
         ($tmp.5 Integer)
         (mult
           (Function (Integer Integer) Integer))
         (x.1 Integer)
         (y.1 Integer)))
      (body
        (((Label block_1)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label block_2)
          (Block
            (Binfo2
              ((initial
                 ((VarL x.1) (VarL y.1) (RegL Rsp)))
               (afters
                 (((VarL $tmp.4)
                   (VarL x.1)
                   (VarL y.1)
                   (RegL Rsp))
                  ((VarL $tmp.2)
                   (VarL $tmp.4)
                   (VarL x.1)
                   (VarL y.1)
                   (RegL Rsp))
                  ((VarL $tmp.2)
                   (VarL $tmp.4)
                   (VarL x.1)
                   (VarL y.1)
                   (RegL Rsp))
                  ((VarL $tmp.3)
                   (VarL $tmp.4)
                   (VarL x.1)
                   (VarL y.1)
                   (RegL Rsp))
                  ((VarL $tmp.3)
                   (VarL $tmp.4)
                   (VarL y.1)
                   (RegL Rsp))
                  ((VarL $tmp.4)
                   (VarL y.1)
                   (RegL Rsp)
                   (RegL Rdi))
                  ((VarL $tmp.4)
                   (VarL y.1)
                   (RegL Rsp)
                   (RegL Rsi)
                   (RegL Rdi))
                  ((VarL y.1) (RegL Rsp) (RegL Rax))
                  ((VarL $tmp.5) (VarL y.1) (RegL Rsp))
                  ((VarL $tmp.5) (RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Leaq
               (GlobalArg (Label mult))
               (Var $tmp.4))
             (Movq (Imm 1) (Var $tmp.2))
             (Negq (Var $tmp.2))
             (Movq (Var $tmp.2) (Var $tmp.3))
             (Addq (Var x.1) (Var $tmp.3))
             (Movq (Var $tmp.3) (Reg Rdi))
             (Movq (Var y.1) (Reg Rsi))
             (IndirectCallq (Var $tmp.4) 2)
             (Movq (Reg Rax) (Var $tmp.5))
             (Movq (Var y.1) (Reg Rax))
             (Addq (Var $tmp.5) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label mult_start)
          (Block
            (Binfo2
              ((initial
                 ((RegL Rsp) (RegL Rsi) (RegL Rdi)))
               (afters
                 (((VarL x.1) (RegL Rsp) (RegL Rsi))
                  ((VarL x.1) (VarL y.1) (RegL Rsp))
                  ((VarL x.1)
                   (VarL y.1)
                   (RegL Rsp)
                   (RegL Rflags))
                  ((VarL x.1) (VarL y.1) (RegL Rsp))
                  ()))))
            ((Movq (Reg Rdi) (Var x.1))
             (Movq (Reg Rsi) (Var y.1))
             (Cmpq (Var x.1) (Imm 0))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))))
