(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Apply
          (FunRef (Label f) 2)
          ((Int 0)
           (Let
             _.2
             (If
               (Prim
                 Lt
                 ((Prim
                    Add
                    ((GlobalVal free_ptr) (Int 16)))
                  (GlobalVal fromspace_end)))
               Void
               (Collect 16))
             (Let
               $ea.1
               (Allocate 1 (Vector (Integer)))
               (Let
                 _.1
                 (VecSet (Var $ea.1) 0 (Int 42))
                 (Var $ea.1)))))))))
   (Def
     (Label f)
     ((args
        ((n.1 Integer) (v.1 (Vector (Integer)))))
      (ret Integer)
      (body
        (If
          (Prim Eq ((Var n.1) (Int 100)))
          (VecRef (Var v.1) 0)
          (Apply
            (FunRef (Label f) 2)
            ((Prim Add ((Var n.1) (Int 1)))
             (Let
               $ea.2
               (VecRef (Var v.1) 0)
               (Let
                 _.4
                 (If
                   (Prim
                     Lt
                     ((Prim
                        Add
                        ((GlobalVal free_ptr) (Int 16)))
                      (GlobalVal fromspace_end)))
                   Void
                   (Collect 16))
                 (Let
                   $ea.3
                   (Allocate 1 (Vector (Integer)))
                   (Let
                     _.3
                     (VecSet (Var $ea.3) 0 (Var $ea.2))
                     (Var $ea.3)))))))))))))
