(X86Program
  ((Def
     (Label main)
     (Finfo
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee (Rbx)))
     ((nparams 0)
      (locals
        (($tmp.1
           (Function (Integer Integer) Integer))
         (mult
           (Function (Integer Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            ((Leaq
               (GlobalArg (Label mult))
               (Reg Rbx))
             (Movq (Imm 6) (Reg Rdi))
             (Movq (Imm 7) (Reg Rsi))
             (Movq (Reg Rbx) (Reg Rax))
             (TailJmp (Reg Rax) 2))))))))
   (Def
     (Label mult)
     (Finfo
       (num_spilled 3)
       (num_spilled_root 0)
       (used_callee (Rbx)))
     ((nparams 2)
      (locals
        ((x.1 Integer)
         (y.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4
           (Function (Integer Integer) Integer))
         ($tmp.5 Integer)
         (mult
           (Function (Integer Integer) Integer))
         (x.1 Integer)
         (y.1 Integer)))
      (body
        (((Label block_1)
          (Block
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label block_2)
          (Block
            ((Leaq
               (GlobalArg (Label mult))
               (Reg Rax))
             (Movq (Reg Rax) (Deref Rbp -16))
             (Movq (Imm 1) (Deref Rbp -8))
             (Negq (Deref Rbp -8))
             (Movq (Deref Rbp -24) (Reg Rax))
             (Addq (Reg Rax) (Deref Rbp -8))
             (Movq (Deref Rbp -8) (Reg Rdi))
             (Movq (Reg Rbx) (Reg Rsi))
             (IndirectCallq (Deref Rbp -16) 2)
             (Movq (Reg Rax) (Deref Rbp -24))
             (Movq (Reg Rbx) (Reg Rax))
             (Addq (Deref Rbp -24) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label mult_start)
          (Block
            ((Movq (Reg Rdi) (Deref Rbp -24))
             (Movq (Reg Rsi) (Reg Rbx))
             (Movq (Imm 0) (Reg Rax))
             (Cmpq (Deref Rbp -24) (Reg Rax))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))))
