(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Apply
          (FunRef (Label big) 6)
          ((Int 1)
           (Int 2)
           (Int 3)
           (Int 20)
           (Int 5)
           (Let
             _.6
             (If
               (Prim
                 Lt
                 ((Prim
                    Add
                    ((GlobalVal free_ptr) (Int 48)))
                  (GlobalVal fromspace_end)))
               Void
               (Collect 48))
             (Let
               $ea.1
               (Allocate
                 5
                 (Vector
                   (Integer
                     Integer
                     Integer
                     Integer
                     Integer)))
               (Let
                 _.5
                 (VecSet (Var $ea.1) 0 (Int 6))
                 (Let
                   _.4
                   (VecSet (Var $ea.1) 1 (Int 7))
                   (Let
                     _.3
                     (VecSet (Var $ea.1) 2 (Int 8))
                     (Let
                       _.2
                       (VecSet (Var $ea.1) 3 (Int 9))
                       (Let
                         _.1
                         (VecSet (Var $ea.1) 4 (Int 22))
                         (Var $ea.1)))))))))))))
   (Def
     (Label big)
     ((args
        ((a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)
         ($tup.1
           (Vector
             (Integer
               Integer
               Integer
               Integer
               Integer)))))
      (ret Integer)
      (body
        (Prim
          Add
          ((Var d.1) (VecRef (Var $tup.1) 4))))))))
