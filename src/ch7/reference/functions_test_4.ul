(X86Program
  ((Def
     (Label main)
     Finfo1
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         (sum (Function (Integer) Integer))))
      (body
        (((Label block_1)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Imm 42) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label block_2)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Imm 777) (Reg Rax))
             (Jmp (Label main_conclusion)))))
         ((Label main_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters
                 (((VarL $tmp.1) (RegL Rsp))
                  ((VarL $tmp.1) (RegL Rsp) (RegL Rdi))
                  ((RegL Rsp) (RegL Rax))
                  ((VarL $tmp.2) (RegL Rsp))
                  ((RegL Rsp) (RegL Rflags))
                  ((RegL Rsp))
                  ()))))
            ((Leaq
               (GlobalArg (Label sum))
               (Var $tmp.1))
             (Movq (Imm 3) (Reg Rdi))
             (IndirectCallq (Var $tmp.1) 1)
             (Movq (Reg Rax) (Var $tmp.2))
             (Cmpq (Imm 6) (Var $tmp.2))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))
   (Def
     (Label sum)
     Finfo1
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($tmp.3 Integer)
         ($tmp.4 Integer)
         ($tmp.5 (Function (Integer) Integer))
         ($tmp.6 Integer)
         (sum (Function (Integer) Integer))
         (x.1 Integer)))
      (body
        (((Label block_3)
          (Block
            (Binfo2
              ((initial ((RegL Rsp)))
               (afters (((RegL Rsp) (RegL Rax)) ()))))
            ((Movq (Imm 1) (Reg Rax))
             (Jmp (Label sum_conclusion)))))
         ((Label block_4)
          (Block
            (Binfo2
              ((initial ((VarL x.1) (RegL Rsp)))
               (afters
                 (((VarL $tmp.5) (VarL x.1) (RegL Rsp))
                  ((VarL $tmp.3)
                   (VarL $tmp.5)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.3)
                   (VarL $tmp.5)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.3)
                   (VarL $tmp.4)
                   (VarL $tmp.5)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.4)
                   (VarL $tmp.5)
                   (VarL x.1)
                   (RegL Rsp))
                  ((VarL $tmp.5)
                   (VarL x.1)
                   (RegL Rsp)
                   (RegL Rdi))
                  ((VarL x.1) (RegL Rsp) (RegL Rax))
                  ((VarL $tmp.6) (VarL x.1) (RegL Rsp))
                  ((VarL $tmp.6) (RegL Rsp) (RegL Rax))
                  ((RegL Rsp) (RegL Rax))
                  ()))))
            ((Leaq
               (GlobalArg (Label sum))
               (Var $tmp.5))
             (Movq (Imm 1) (Var $tmp.3))
             (Negq (Var $tmp.3))
             (Movq (Var x.1) (Var $tmp.4))
             (Addq (Var $tmp.3) (Var $tmp.4))
             (Movq (Var $tmp.4) (Reg Rdi))
             (IndirectCallq (Var $tmp.5) 1)
             (Movq (Reg Rax) (Var $tmp.6))
             (Movq (Var x.1) (Reg Rax))
             (Addq (Var $tmp.6) (Reg Rax))
             (Jmp (Label sum_conclusion)))))
         ((Label sum_start)
          (Block
            (Binfo2
              ((initial ((RegL Rsp) (RegL Rdi)))
               (afters
                 (((VarL x.1) (RegL Rsp))
                  ((VarL x.1) (RegL Rsp) (RegL Rflags))
                  ((VarL x.1) (RegL Rsp))
                  ()))))
            ((Movq (Reg Rdi) (Var x.1))
             (Cmpq (Imm 1) (Var x.1))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))))
