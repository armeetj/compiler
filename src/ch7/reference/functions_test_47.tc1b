(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (If
          (Prim
            Eq
            ((Apply (FunRef (Label sum) 1) ((Int 3)))
             (Int 6)))
          (Int 42)
          (Int 777)))))
   (Def
     (Label sum)
     ((args ((x.1 Integer)))
      (ret Integer)
      (body
        (Let
          x-vec.1
          (Vec ((Var x.1)) ((Vector (Integer))))
          (Let
            one.1
            (Vec ((Int 1)) ((Vector (Integer))))
            (Let
              neg-one.1
              (Vec
                ((Prim Negate ((Int 1))))
                ((Vector (Integer))))
              (If
                (Prim
                  Eq
                  ((VecRef (Var x-vec.1) 0) (Int 1)))
                (VecRef (Var one.1) 0)
                (Prim
                  Add
                  ((Var x.1)
                   (Apply
                     (FunRef (Label sum) 1)
                     ((Prim
                        Add
                        ((Var x.1) (VecRef (Var neg-one.1) 0))))))))))))))))
