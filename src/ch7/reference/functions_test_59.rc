(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $tmp.4
          (FunRef (Label rf) 1)
          (Let
            $tmp.5
            (Apply (Var $tmp.4) ((Int 0)))
            (Let
              _.4
              (If
                (Let
                  $tmp.1
                  (GlobalVal free_ptr)
                  (Let
                    $tmp.2
                    (Prim Add ((Var $tmp.1) (Int 32)))
                    (Let
                      $tmp.3
                      (GlobalVal fromspace_end)
                      (Prim Lt ((Var $tmp.2) (Var $tmp.3))))))
                (Atm Void)
                (Collect 32))
              (Let
                $ea.1
                (Allocate
                  3
                  (Vector (Integer Integer Integer)))
                (Let
                  _.3
                  (VecSet (Var $ea.1) 0 (Int 5))
                  (Let
                    _.2
                    (VecSet (Var $ea.1) 1 (Int 6))
                    (Let
                      _.1
                      (VecSet (Var $ea.1) 2 (Int 7))
                      (Apply
                        (Var $tmp.5)
                        ((Int 42)
                         (Int 1)
                         (Int 2)
                         (Int 3)
                         (Int 4)
                         (Var $ea.1)))))))))))))
   (Def
     (Label f)
     ((args
        ((x1.1 Integer)
         (x2.1 Integer)
         (x3.1 Integer)
         (x4.1 Integer)
         (x5.1 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))))
      (ret Integer)
      (body (Atm (Var x1.1)))))
   (Def
     (Label rf)
     ((args ((x.1 Integer)))
      (ret
        (Function
          (Integer
            Integer
            Integer
            Integer
            Integer
            (Vector (Integer Integer Integer)))
          Integer))
      (body (FunRef (Label f) 6))))))
