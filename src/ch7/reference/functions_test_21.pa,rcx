main_start:
    leaq tail_sum(%rip), %rax
    movq %rax, -8(%rbp)
    movq $5, %rdi
    movq $0, %rsi
    callq *-8(%rbp)
    movq %rax, %rcx
    addq $27, %rax
    jmp main_conclusion

    .globl main
    .align 8

main:
    pushq %rbp
    movq %rsp, %rbp
    subq $16, %rsp
    movq $65536, %rdi
    movq $65536, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    jmp main_start

main_conclusion:
    addq $16, %rsp
    popq %rbp
    retq

block_1:
    movq -24(%rbp), %rax
    jmp tail_sum_conclusion

block_2:
    leaq tail_sum(%rip), %rax
    movq %rax, -16(%rbp)
    movq %rcx, -8(%rbp)
    subq $1, -8(%rbp)
    addq -24(%rbp), %rcx
    movq -8(%rbp), %rdi
    movq %rcx, %rsi
    movq -16(%rbp), %rax
    addq $32, %rsp
    popq %rbp
    jmp *%rax

tail_sum_start:
    movq %rdi, %rcx
    movq %rsi, -24(%rbp)
    cmpq $0, %rcx
    je block_1
    jmp block_2

    .globl tail_sum
    .align 8

tail_sum:
    pushq %rbp
    movq %rsp, %rbp
    subq $32, %rsp
    jmp tail_sum_start

tail_sum_conclusion:
    addq $32, %rsp
    popq %rbp
    retq
