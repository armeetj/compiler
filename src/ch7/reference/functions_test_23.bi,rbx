(X86Program
  ((Def
     (Label main)
     (Finfo2
       (conflicts
         (((VarL $tmp.1) ((RegL Rsp) (RegL Rdi)))
          ((VarL $tmp.2)
           ((VarL $tmp.3)
            (VarL $tmp.4)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((VarL $tmp.3)
           ((VarL $tmp.2)
            (RegL Rsp)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)))
          ((VarL $tmp.4)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax)))
          ((VarL f) ((RegL Rsp)))
          ((VarL g) ((RegL Rsp)))
          ((RegL Rsp)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (VarL $tmp.4)
            (VarL f)
            (VarL g)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rax)
           ((VarL $tmp.2)
            (VarL $tmp.4)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax)))
          ((RegL Rdx)
           ((VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rsi)
            (RegL Rdi)))
          ((RegL Rsi)
           ((VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rdx)
            (RegL Rdi)))
          ((RegL Rdi)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rdx)
            (RegL Rsi)))
          ((RegL R8)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax)))
          ((RegL R9)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax)))
          ((RegL R10)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax)))
          ((RegL R11)
           ((VarL $tmp.2) (RegL Rsp) (RegL Rax))))))
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         ($tmp.3
           (Function
             (Integer Integer Integer)
             Integer))
         ($tmp.4 Integer)
         (f (Function (Integer) Integer))
         (g
           (Function
             (Integer Integer Integer)
             Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label f))
               (Var $tmp.1))
             (Movq (Imm 8) (Reg Rdi))
             (IndirectCallq (Var $tmp.1) 1)
             (Movq (Reg Rax) (Var $tmp.2))
             (Leaq
               (GlobalArg (Label g))
               (Var $tmp.3))
             (Movq (Imm 8) (Reg Rdi))
             (Movq (Imm 0) (Reg Rsi))
             (Movq (Imm 1) (Reg Rdx))
             (IndirectCallq (Var $tmp.3) 3)
             (Movq (Reg Rax) (Var $tmp.4))
             (Movq (Var $tmp.2) (Reg Rax))
             (Addq (Var $tmp.4) (Reg Rax))
             (Jmp (Label main_conclusion)))))))))
   (Def
     (Label f)
     (Finfo2
       (conflicts
         (((VarL $tmp.10)
           ((VarL $tmp.7) (RegL Rsp) (RegL Rax)))
          ((VarL $tmp.5)
           ((VarL $tmp.6) (VarL x.1) (RegL Rsp)))
          ((VarL $tmp.6)
           ((VarL $tmp.5)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rdi)))
          ((VarL $tmp.7)
           ((VarL $tmp.10)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((VarL $tmp.8)
           ((VarL $tmp.7) (VarL $tmp.9) (RegL Rsp)))
          ((VarL $tmp.9)
           ((VarL $tmp.7)
            (VarL $tmp.8)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rdi)))
          ((VarL f) ((RegL Rsp)))
          ((VarL x.1)
           ((VarL $tmp.5)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tmp.9)
            (RegL Rsp)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rsp)
           ((VarL $tmp.10)
            (VarL $tmp.5)
            (VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tmp.8)
            (VarL $tmp.9)
            (VarL f)
            (VarL x.1)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)
            (RegL Rflags)))
          ((RegL Rax)
           ((VarL $tmp.10)
            (VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL Rdx)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL Rsi)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL Rdi)
           ((VarL $tmp.6)
            (VarL $tmp.7)
            (VarL $tmp.9)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R8)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R9)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R10)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL R11)
           ((VarL $tmp.7)
            (VarL x.1)
            (RegL Rsp)
            (RegL Rax)))
          ((RegL Rflags) ((VarL x.1) (RegL Rsp))))))
     ((nparams 1)
      (locals
        ((x.1 Integer)
         ($tmp.10 Integer)
         ($tmp.5 Integer)
         ($tmp.6 (Function (Integer) Integer))
         ($tmp.7 Integer)
         ($tmp.8 Integer)
         ($tmp.9 (Function (Integer) Integer))
         (f (Function (Integer) Integer))
         (x.1 Integer)))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq (Imm 1) (Reg Rax))
             (Jmp (Label f_conclusion)))))
         ((Label block_2)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label f))
               (Var $tmp.6))
             (Movq (Var x.1) (Var $tmp.5))
             (Subq (Imm 1) (Var $tmp.5))
             (Movq (Var $tmp.5) (Reg Rdi))
             (IndirectCallq (Var $tmp.6) 1)
             (Movq (Reg Rax) (Var $tmp.7))
             (Leaq
               (GlobalArg (Label f))
               (Var $tmp.9))
             (Movq (Var x.1) (Var $tmp.8))
             (Subq (Imm 2) (Var $tmp.8))
             (Movq (Var $tmp.8) (Reg Rdi))
             (IndirectCallq (Var $tmp.9) 1)
             (Movq (Reg Rax) (Var $tmp.10))
             (Movq (Var $tmp.7) (Reg Rax))
             (Addq (Var $tmp.10) (Reg Rax))
             (Jmp (Label f_conclusion)))))
         ((Label block_3)
          (Block
            Binfo1
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label f_conclusion)))))
         ((Label block_4)
          (Block
            Binfo1
            ((Cmpq (Imm 1) (Var x.1))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))
         ((Label f_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.1))
             (Cmpq (Imm 0) (Var x.1))
             (JmpIf CC_e (Label block_3))
             (Jmp (Label block_4)))))))))
   (Def
     (Label g)
     (Finfo2
       (conflicts
         (((VarL $tmp.11)
           ((VarL $tmp.12)
            (VarL $tmp.13)
            (VarL y.1)
            (VarL z.1)))
          ((VarL $tmp.12)
           ((VarL $tmp.11)
            (VarL $tmp.13)
            (VarL z.1)
            (RegL Rsi)
            (RegL Rdi)))
          ((VarL $tmp.13)
           ((VarL $tmp.11)
            (VarL $tmp.12)
            (VarL x.2)
            (VarL y.1)
            (VarL z.1)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)))
          ((VarL g) ((RegL Rsp)))
          ((VarL x.2)
           ((VarL $tmp.13)
            (VarL y.1)
            (VarL z.1)
            (RegL Rsp)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rflags)))
          ((VarL y.1)
           ((VarL $tmp.11)
            (VarL $tmp.13)
            (VarL x.2)
            (VarL z.1)
            (RegL Rsp)
            (RegL Rdx)
            (RegL Rflags)))
          ((VarL z.1)
           ((VarL $tmp.11)
            (VarL $tmp.12)
            (VarL $tmp.13)
            (VarL x.2)
            (VarL y.1)
            (RegL Rsp)
            (RegL Rdi)
            (RegL Rflags)))
          ((RegL Rsp)
           ((VarL g)
            (VarL x.2)
            (VarL y.1)
            (VarL z.1)
            (RegL Rax)
            (RegL Rflags)))
          ((RegL Rax) ((RegL Rsp)))
          ((RegL Rdx)
           ((VarL $tmp.13)
            (VarL x.2)
            (VarL y.1)
            (RegL Rsi)
            (RegL Rdi)))
          ((RegL Rsi)
           ((VarL $tmp.12)
            (VarL $tmp.13)
            (VarL x.2)
            (RegL Rdx)
            (RegL Rdi)))
          ((RegL Rdi)
           ((VarL $tmp.12)
            (VarL $tmp.13)
            (VarL z.1)
            (RegL Rdx)
            (RegL Rsi)))
          ((RegL Rflags)
           ((VarL x.2)
            (VarL y.1)
            (VarL z.1)
            (RegL Rsp))))))
     ((nparams 3)
      (locals
        ((x.2 Integer)
         (y.1 Integer)
         (z.1 Integer)
         ($tmp.11 Integer)
         ($tmp.12 Integer)
         ($tmp.13
           (Function
             (Integer Integer Integer)
             Integer))
         (g
           (Function
             (Integer Integer Integer)
             Integer))
         (x.2 Integer)
         (y.1 Integer)
         (z.1 Integer)))
      (body
        (((Label block_5)
          (Block
            Binfo1
            ((Movq (Var z.1) (Reg Rax))
             (Jmp (Label g_conclusion)))))
         ((Label block_6)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label g))
               (Var $tmp.13))
             (Movq (Var x.2) (Var $tmp.11))
             (Subq (Imm 1) (Var $tmp.11))
             (Movq (Var y.1) (Var $tmp.12))
             (Addq (Var z.1) (Var $tmp.12))
             (Movq (Var $tmp.11) (Reg Rdi))
             (Movq (Var z.1) (Reg Rsi))
             (Movq (Var $tmp.12) (Reg Rdx))
             (TailJmp (Var $tmp.13) 3))))
         ((Label block_7)
          (Block
            Binfo1
            ((Movq (Var y.1) (Reg Rax))
             (Jmp (Label g_conclusion)))))
         ((Label block_8)
          (Block
            Binfo1
            ((Cmpq (Imm 1) (Var x.2))
             (JmpIf CC_e (Label block_5))
             (Jmp (Label block_6)))))
         ((Label g_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.2))
             (Movq (Reg Rsi) (Var y.1))
             (Movq (Reg Rdx) (Var z.1))
             (Cmpq (Imm 0) (Var x.2))
             (JmpIf CC_e (Label block_7))
             (Jmp (Label block_8)))))))))))
