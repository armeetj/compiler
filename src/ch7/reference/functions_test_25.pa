block_1:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, %rdx
    movq %rbx, 8(%r11)
    movq $0, %rcx
    movq %rdx, %rdi
    callq *%r12
    movq %rax, %rcx
    movq $42, %rdi
    movq %rcx, %rax
    popq %r12
    popq %rbx
    popq %rbp
    jmp *%rax

block_2:
    movq $0, %rcx
    jmp block_1

block_3:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block_1

main_start:
    leaq f(%rip), %r12
    leaq id(%rip), %rbx
    movq free_ptr(%rip), %rdx
    addq $16, %rdx
    movq fromspace_end(%rip), %rsi
    cmpq %rsi, %rdx
    jl block_2
    jmp block_3

    .globl main
    .align 8

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    movq $65536, %rdi
    movq $65536, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    jmp main_start

main_conclusion:
    popq %r12
    popq %rbx
    popq %rbp
    retq

id_start:
    movq %rdi, %rcx
    movq %rcx, %rax
    jmp id_conclusion

    .globl id
    .align 8

id:
    pushq %rbp
    movq %rsp, %rbp
    jmp id_start

id_conclusion:
    popq %rbp
    retq

f_start:
    movq %rdi, %rcx
    movq %rcx, %r11
    movq 8(%r11), %rax
    jmp f_conclusion

    .globl f
    .align 8

f:
    pushq %rbp
    movq %rsp, %rbp
    jmp f_start

f_conclusion:
    popq %rbp
    retq
