(X86Program
  ((Def
     (Label main)
     (Finfo3
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee ()))
     ((nparams 0)
      (locals
        (($tmp.1
           (Function (Integer Integer) Integer))
         (mult
           (Function (Integer Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label mult))
               (Reg Rcx))
             (Movq (Imm 6) (Reg Rdi))
             (Movq (Imm 7) (Reg Rsi))
             (TailJmp (Reg Rcx) 2))))))))
   (Def
     (Label mult)
     (Finfo3
       (num_spilled 0)
       (num_spilled_root 0)
       (used_callee (Rbx)))
     ((nparams 2)
      (locals
        ((x.1 Integer)
         (y.1 Integer)
         ($tmp.2 Integer)
         ($tmp.3 Integer)
         ($tmp.4
           (Function (Integer Integer) Integer))
         ($tmp.5 Integer)
         (mult
           (Function (Integer Integer) Integer))
         (x.1 Integer)
         (y.1 Integer)))
      (body
        (((Label block_1)
          (Block
            Binfo1
            ((Movq (Imm 0) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label block_2)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label mult))
               (Reg Rcx))
             (Movq (Imm 1) (Reg Rsi))
             (Negq (Reg Rsi))
             (Movq (Reg Rsi) (Reg Rsi))
             (Addq (Reg Rdx) (Reg Rsi))
             (Movq (Reg Rsi) (Reg Rdi))
             (Movq (Reg Rbx) (Reg Rsi))
             (IndirectCallq (Reg Rcx) 2)
             (Movq (Reg Rax) (Reg Rcx))
             (Movq (Reg Rbx) (Reg Rax))
             (Addq (Reg Rcx) (Reg Rax))
             (Jmp (Label mult_conclusion)))))
         ((Label mult_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Reg Rdx))
             (Movq (Reg Rsi) (Reg Rbx))
             (Cmpq (Reg Rdx) (Imm 0))
             (JmpIf CC_e (Label block_1))
             (Jmp (Label block_2)))))))))))
