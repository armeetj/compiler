(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Apply
          (FunRef (Label foo) 6)
          ((Int 100)
           (Int 2)
           (Int 3)
           (Int 4)
           (Int 5)
           (Vec
             ((Int 6) (Int 7) (Int 8) (Int 142))
             ((Vector
                (Integer Integer Integer Integer)))))))))
   (Def
     (Label foo)
     ((args
        ((x1.1 Integer)
         (x2.1 Integer)
         (x3.1 Integer)
         (x4.1 Integer)
         (x5.1 Integer)
         ($tup.1
           (Vector
             (Integer Integer Integer Integer)))))
      (ret Integer)
      (body
        (If
          (Prim Eq ((Int 0) (Var x1.1)))
          (VecRef (Var $tup.1) 3)
          (Apply
            (FunRef (Label foo) 6)
            ((Prim
               Add
               ((Var x1.1) (Prim Negate ((Int 1)))))
             (Var x2.1)
             (Var x3.1)
             (Var x4.1)
             (Var x5.1)
             (Vec
               ((VecRef (Var $tup.1) 0)
                (VecRef (Var $tup.1) 1)
                (VecRef (Var $tup.1) 2)
                (Prim
                  Add
                  ((VecRef (Var $tup.1) 3)
                   (Prim Negate ((Int 1))))))
               ((Vector
                  (Integer Integer Integer Integer))))))))))))
