(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $tmp.2
          (FunRef (Label g) 1)
          (Let
            $tmp.1
            (FunRef (Label sum_eight) 6)
            (Let
              $tmp.3
              (Apply (Var $tmp.2) ((Var $tmp.1)))
              (Prim Add ((Int 6) (Var $tmp.3)))))))))
   (Def
     (Label sum_eight)
     ((args
        ((a.1 Integer)
         (b.1 Integer)
         (c.1 Integer)
         (d.1 Integer)
         (e.1 Integer)
         ($tup.1
           (Vector (Integer Integer Integer)))))
      (ret Integer)
      (body
        (Let
          $tmp.4
          (Prim Add ((Var a.1) (Var b.1)))
          (Let
            $tmp.5
            (Prim Add ((Var c.1) (Var d.1)))
            (Let
              $tmp.6
              (Prim Add ((Var $tmp.4) (Var $tmp.5)))
              (Let
                $tmp.7
                (VecRef (Var $tup.1) 0)
                (Let
                  $tmp.8
                  (Prim Add ((Var e.1) (Var $tmp.7)))
                  (Let
                    $tmp.9
                    (VecRef (Var $tup.1) 1)
                    (Let
                      $tmp.10
                      (VecRef (Var $tup.1) 2)
                      (Let
                        $tmp.11
                        (Prim Add ((Var $tmp.9) (Var $tmp.10)))
                        (Let
                          $tmp.12
                          (Prim Add ((Var $tmp.8) (Var $tmp.11)))
                          (Prim Add ((Var $tmp.6) (Var $tmp.12)))))))))))))))
   (Def
     (Label g)
     ((args
        ((f.2
           (Function
             (Integer
               Integer
               Integer
               Integer
               Integer
               (Vector (Integer Integer Integer)))
             Integer))))
      (ret Integer)
      (body
        (Let
          _.4
          (If
            (Let
              $tmp.13
              (GlobalVal free_ptr)
              (Let
                $tmp.14
                (Prim Add ((Var $tmp.13) (Int 32)))
                (Let
                  $tmp.15
                  (GlobalVal fromspace_end)
                  (Prim Lt ((Var $tmp.14) (Var $tmp.15))))))
            (Atm Void)
            (Collect 32))
          (Let
            $ea.1
            (Allocate
              3
              (Vector (Integer Integer Integer)))
            (Let
              _.3
              (VecSet (Var $ea.1) 0 (Int 6))
              (Let
                _.2
                (VecSet (Var $ea.1) 1 (Int 7))
                (Let
                  _.1
                  (VecSet (Var $ea.1) 2 (Int 8))
                  (Apply
                    (Var f.2)
                    ((Int 1)
                     (Int 2)
                     (Int 3)
                     (Int 4)
                     (Int 5)
                     (Var $ea.1)))))))))))))
