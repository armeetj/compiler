(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (If
          (Let
            $tmp.1
            (FunRef (Label sum) 1)
            (Let
              $tmp.2
              (Apply (Var $tmp.1) ((Int 3)))
              (Prim Eq ((Var $tmp.2) (Int 6)))))
          (Atm (Int 42))
          (Atm (Int 777))))))
   (Def
     (Label sum)
     ((args ((x.1 Integer)))
      (ret Integer)
      (body
        (Let
          x-vec.1
          (Let
            _.2
            (If
              (Let
                $tmp.3
                (GlobalVal free_ptr)
                (Let
                  $tmp.4
                  (Prim Add ((Var $tmp.3) (Int 16)))
                  (Let
                    $tmp.5
                    (GlobalVal fromspace_end)
                    (Prim Lt ((Var $tmp.4) (Var $tmp.5))))))
              (Atm Void)
              (Collect 16))
            (Let
              $ea.1
              (Allocate 1 (Vector (Integer)))
              (Let
                _.1
                (VecSet (Var $ea.1) 0 (Var x.1))
                (Atm (Var $ea.1)))))
          (Let
            one.1
            (Let
              _.4
              (If
                (Let
                  $tmp.6
                  (GlobalVal free_ptr)
                  (Let
                    $tmp.7
                    (Prim Add ((Var $tmp.6) (Int 16)))
                    (Let
                      $tmp.8
                      (GlobalVal fromspace_end)
                      (Prim Lt ((Var $tmp.7) (Var $tmp.8))))))
                (Atm Void)
                (Collect 16))
              (Let
                $ea.2
                (Allocate 1 (Vector (Integer)))
                (Let
                  _.3
                  (VecSet (Var $ea.2) 0 (Int 1))
                  (Atm (Var $ea.2)))))
            (Let
              neg-one.1
              (Let
                $ea.3
                (Prim Negate ((Int 1)))
                (Let
                  _.6
                  (If
                    (Let
                      $tmp.9
                      (GlobalVal free_ptr)
                      (Let
                        $tmp.10
                        (Prim Add ((Var $tmp.9) (Int 16)))
                        (Let
                          $tmp.11
                          (GlobalVal fromspace_end)
                          (Prim Lt ((Var $tmp.10) (Var $tmp.11))))))
                    (Atm Void)
                    (Collect 16))
                  (Let
                    $ea.4
                    (Allocate 1 (Vector (Integer)))
                    (Let
                      _.5
                      (VecSet (Var $ea.4) 0 (Var $ea.3))
                      (Atm (Var $ea.4))))))
              (If
                (Let
                  $tmp.12
                  (VecRef (Var x-vec.1) 0)
                  (Prim Eq ((Var $tmp.12) (Int 1))))
                (VecRef (Var one.1) 0)
                (Let
                  $tmp.15
                  (FunRef (Label sum) 1)
                  (Let
                    $tmp.13
                    (VecRef (Var neg-one.1) 0)
                    (Let
                      $tmp.14
                      (Prim Add ((Var x.1) (Var $tmp.13)))
                      (Let
                        $tmp.16
                        (Apply (Var $tmp.15) ((Var $tmp.14)))
                        (Prim Add ((Var x.1) (Var $tmp.16))))))))))))))))
