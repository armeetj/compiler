(X86Program
  ((Def
     (Label main)
     (Finfo2
       (conflicts
         (((VarL $tmp.1)
           ((VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((VarL $tmp.2)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rdi)))
          ((VarL $tmp.3)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((VarL apply) ((RegL Rsp)))
          ((VarL inc) ((RegL Rsp)))
          ((RegL Rsp) ((VarL apply) (VarL inc)))
          ((RegL Rax)
           ((VarL $tmp.1)
            (VarL $tmp.3)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rax)))
          ((RegL Rdx)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rax)))
          ((RegL Rsi)
           ((VarL $tmp.1)
            (VarL $tmp.3)
            (RegL Rax)
            (RegL Rdi)))
          ((RegL Rdi)
           ((VarL $tmp.1)
            (VarL $tmp.2)
            (VarL $tmp.3)
            (RegL Rax)
            (RegL Rsi)))
          ((RegL R8)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rax)))
          ((RegL R9)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rax)))
          ((RegL R10)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rax)))
          ((RegL R11)
           ((VarL $tmp.1) (VarL $tmp.3) (RegL Rax))))))
     ((nparams 0)
      (locals
        (($tmp.1 (Function (Integer) Integer))
         ($tmp.2 Integer)
         ($tmp.3
           (Function
             ((Function (Integer) Integer) Integer)
             Integer))
         (apply
           (Function
             ((Function (Integer) Integer) Integer)
             Integer))
         (inc (Function (Integer) Integer))))
      (body
        (((Label main_start)
          (Block
            Binfo1
            ((Leaq
               (GlobalArg (Label apply))
               (Var $tmp.3))
             (Leaq
               (GlobalArg (Label inc))
               (Var $tmp.1))
             (Callq (Label read_int) 0)
             (Movq (Reg Rax) (Var $tmp.2))
             (Movq (Var $tmp.1) (Reg Rdi))
             (Movq (Var $tmp.2) (Reg Rsi))
             (TailJmp (Var $tmp.3) 2))))))))
   (Def
     (Label apply)
     (Finfo2
       (conflicts
         (((VarL $tmp.4) ((VarL f.1)))
          ((VarL f.1)
           ((VarL $tmp.4)
            (VarL x.1)
            (RegL Rax)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((VarL x.1) ((VarL f.1)))
          ((RegL Rax)
           ((VarL f.1)
            (RegL Rcx)
            (RegL Rdx)
            (RegL Rsi)
            (RegL Rdi)
            (RegL R8)
            (RegL R9)
            (RegL R10)
            (RegL R11)))
          ((RegL Rcx) ((VarL f.1) (RegL Rax)))
          ((RegL Rdx) ((VarL f.1) (RegL Rax)))
          ((RegL Rsi) ((VarL f.1) (RegL Rax)))
          ((RegL Rdi) ((VarL f.1) (RegL Rax)))
          ((RegL R8) ((VarL f.1) (RegL Rax)))
          ((RegL R9) ((VarL f.1) (RegL Rax)))
          ((RegL R10) ((VarL f.1) (RegL Rax)))
          ((RegL R11) ((VarL f.1) (RegL Rax))))))
     ((nparams 2)
      (locals
        ((f.1 (Function (Integer) Integer))
         (x.1 Integer)
         ($tmp.4 Integer)
         (f.1 (Function (Integer) Integer))
         (x.1 Integer)))
      (body
        (((Label apply_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var f.1))
             (Movq (Reg Rsi) (Var x.1))
             (Movq (Var x.1) (Reg Rdi))
             (IndirectCallq (Var f.1) 1)
             (Movq (Reg Rax) (Var $tmp.4))
             (Movq (Var $tmp.4) (Reg Rdi))
             (TailJmp (Var f.1) 1))))))))
   (Def
     (Label inc)
     (Finfo2
       (conflicts
         (((VarL x.2) ((RegL Rsp)))
          ((RegL Rsp) ((VarL x.2) (RegL Rax)))
          ((RegL Rax) ((RegL Rsp))))))
     ((nparams 1)
      (locals ((x.2 Integer) (x.2 Integer)))
      (body
        (((Label inc_start)
          (Block
            Binfo1
            ((Movq (Reg Rdi) (Var x.2))
             (Movq (Var x.2) (Reg Rax))
             (Addq (Imm 1) (Reg Rax))
             (Jmp (Label inc_conclusion)))))))))))
