(Program
  ((Def
     (Label main)
     ((args ())
      (ret Integer)
      (body
        (Let
          $tmp.5
          (FunRef (Label map_vec) 2)
          (Let
            $tmp.1
            (FunRef (Label add1) 1)
            (Let
              _.3
              (If
                (Let
                  $tmp.2
                  (GlobalVal free_ptr)
                  (Let
                    $tmp.3
                    (Prim Add ((Var $tmp.2) (Int 24)))
                    (Let
                      $tmp.4
                      (GlobalVal fromspace_end)
                      (Prim Lt ((Var $tmp.3) (Var $tmp.4))))))
                (Atm Void)
                (Collect 24))
              (Let
                $ea.1
                (Allocate 2 (Vector (Integer Integer)))
                (Let
                  _.2
                  (VecSet (Var $ea.1) 0 (Int 0))
                  (Let
                    _.1
                    (VecSet (Var $ea.1) 1 (Int 41))
                    (Let
                      $tmp.6
                      (Apply
                        (Var $tmp.5)
                        ((Var $tmp.1) (Var $ea.1)))
                      (VecRef (Var $tmp.6) 1)))))))))))
   (Def
     (Label map_vec)
     ((args
        ((f.1 (Function (Integer) Integer))
         (v.1 (Vector (Integer Integer)))))
      (ret (Vector (Integer Integer)))
      (body
        (Let
          $ea.2
          (Let
            $tmp.7
            (VecRef (Var v.1) 0)
            (Apply (Var f.1) ((Var $tmp.7))))
          (Let
            $ea.3
            (Let
              $tmp.8
              (VecRef (Var v.1) 1)
              (Apply (Var f.1) ((Var $tmp.8))))
            (Let
              _.6
              (If
                (Let
                  $tmp.9
                  (GlobalVal free_ptr)
                  (Let
                    $tmp.10
                    (Prim Add ((Var $tmp.9) (Int 24)))
                    (Let
                      $tmp.11
                      (GlobalVal fromspace_end)
                      (Prim Lt ((Var $tmp.10) (Var $tmp.11))))))
                (Atm Void)
                (Collect 24))
              (Let
                $ea.4
                (Allocate 2 (Vector (Integer Integer)))
                (Let
                  _.5
                  (VecSet (Var $ea.4) 0 (Var $ea.2))
                  (Let
                    _.4
                    (VecSet (Var $ea.4) 1 (Var $ea.3))
                    (Atm (Var $ea.4)))))))))))
   (Def
     (Label add1)
     ((args ((x.1 Integer)))
      (ret Integer)
      (body (Prim Add ((Var x.1) (Int 1))))))))
