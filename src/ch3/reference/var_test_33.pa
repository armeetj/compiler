start:
    callq read_int
    movq %rax, %rbx
    callq read_int
    movq %rax, %r12
    callq read_int
    movq %rax, %r13
    callq read_int
    movq %rax, %r14
    callq read_int
    movq %rax, -40(%rbp)
    callq read_int
    movq %rax, %rcx
    movq %r12, %rdx
    negq %rdx
    movq %rbx, %rsi
    addq %rdx, %rsi
    movq %r14, %rdx
    negq %rdx
    movq %r13, %rdi
    addq %rdx, %rdi
    movq %rsi, %rdx
    addq %rdi, %rdx
    negq %rcx
    movq -40(%rbp), %rsi
    addq %rcx, %rsi
    movq %rsi, %rcx
    addq $0, %rcx
    addq %rcx, %rdx
    movq %rdx, %rax
    addq $42, %rax
    jmp conclusion

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    pushq %r14
    subq $16, %rsp
    jmp start

conclusion:
    addq $16, %rsp
    popq %r14
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
