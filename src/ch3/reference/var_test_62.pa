start:
    callq read_int
    movq %rax, %rbx
    callq read_int
    movq %rax, %r12
    callq read_int
    movq %rax, %r13
    callq read_int
    movq %rax, %r14
    callq read_int
    movq %rax, -40(%rbp)
    callq read_int
    movq %rax, -48(%rbp)
    callq read_int
    movq %rax, -56(%rbp)
    callq read_int
    movq %rax, -64(%rbp)
    callq read_int
    movq %rax, -72(%rbp)
    callq read_int
    movq %rax, -80(%rbp)
    callq read_int
    movq %rax, %rcx
    addq $31, %rcx
    movq -80(%rbp), %rdx
    addq %rcx, %rdx
    movq -72(%rbp), %rcx
    addq %rdx, %rcx
    movq -64(%rbp), %rdx
    addq %rcx, %rdx
    movq -56(%rbp), %rcx
    addq %rdx, %rcx
    movq -48(%rbp), %rdx
    addq %rcx, %rdx
    movq -40(%rbp), %rcx
    addq %rdx, %rcx
    movq %r14, %rdx
    addq %rcx, %rdx
    movq %r13, %rcx
    addq %rdx, %rcx
    movq %r12, %rdx
    addq %rcx, %rdx
    movq %rbx, %rax
    addq %rdx, %rax
    jmp conclusion

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    pushq %r14
    subq $48, %rsp
    jmp start

conclusion:
    addq $48, %rsp
    popq %r14
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
