start:
    callq read_int
    movq %rax, -16(%rbp)
    callq read_int
    movq %rax, %rbx
    callq read_int
    movq %rax, -24(%rbp)
    callq read_int
    movq %rax, -32(%rbp)
    callq read_int
    movq %rax, -40(%rbp)
    callq read_int
    movq %rax, -48(%rbp)
    callq read_int
    movq %rax, -56(%rbp)
    callq read_int
    movq %rax, -64(%rbp)
    callq read_int
    movq %rax, -72(%rbp)
    callq read_int
    movq %rax, -80(%rbp)
    callq read_int
    movq %rax, -88(%rbp)
    addq $31, -88(%rbp)
    movq -88(%rbp), %rax
    addq %rax, -80(%rbp)
    movq -80(%rbp), %rax
    addq %rax, -72(%rbp)
    movq -72(%rbp), %rax
    addq %rax, -64(%rbp)
    movq -64(%rbp), %rax
    addq %rax, -56(%rbp)
    movq -56(%rbp), %rax
    addq %rax, -48(%rbp)
    movq -48(%rbp), %rax
    addq %rax, -40(%rbp)
    movq -40(%rbp), %rax
    addq %rax, -32(%rbp)
    movq -32(%rbp), %rax
    addq %rax, -24(%rbp)
    addq -24(%rbp), %rbx
    movq -16(%rbp), %rax
    addq %rbx, %rax
    jmp conclusion

    .globl main

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    subq $88, %rsp
    jmp start

conclusion:
    addq $88, %rsp
    popq %rbx
    popq %rbp
    retq
